{"code":"let xLocation,yLocation,loader,interval0,interval1,interval2,interval3,interval4,interval5,interval6,dataArray,baseStatus=\"buurt\";const basedataDefault=\"m_exercise\";let selectedAttribute,baseJson,mapInitialize,mapLayers,basebuurt_svg,basestadsdeel_svg,bennekel_svg,buurt_each,changeAttr,changeBasemap,addOverlay,bindDataBB,bindDataBS,tooltipContainerBM,tooltipPlace,tooltipValue,tooltipContainerOL,tooltipType,tooltipName,tooltipMoreData,tooltipContainerAQ,tooltipPM1,tooltipPM25,tooltipPM10,tooltipContainerPC,tooltipConcernsTopic,tooltipConcernsTime,tooltipContainerTR,tooltipSpeedLimit,tooltipContainerBK,sidebarjs,sideContent,clickedPathActive,selectedNeighbor,totalpop,men,women,age0_14,age15_64,age65,dutch,immigrants,single,wKids,income,foot,bike,auto,transit,gElem,clickedPath,copiedPath,basemapAttr,basemapInfo,pageHinder,benekelModal,benekelModalClose;clickedPathActive=!1,window.onload=function(){tooltipContainerBM=document.getElementById(\"basemap-tooltip\"),tooltipPlace=document.getElementById(\"basemap-tooltip-place\"),tooltipValue=document.getElementById(\"basemap-tooltip-value\"),tooltipContainerOL=document.getElementById(\"overlay-tooltip\"),tooltipType=document.getElementById(\"overlay-tooltip-type\"),tooltipName=document.getElementById(\"overlay-tooltip-name\"),tooltipContainerAQ=document.getElementById(\"airquality-tooltip\"),tooltipPM1=document.getElementById(\"airquality-tooltip-pm1\"),tooltipPM25=document.getElementById(\"airquality-tooltip-pm25\"),tooltipPM10=document.getElementById(\"airquality-tooltip-pm10\"),tooltipMoreData=document.getElementById(\"basemap-tooltip-moreData\"),tooltipContainerPC=document.getElementById(\"publicconcerns-tooltip\"),tooltipConcernsTopic=document.getElementById(\"overlay-tooltip-topic\"),tooltipConcernsTime=document.getElementById(\"overlay-tooltip-time\"),tooltipContainerTR=document.getElementById(\"traffic-tooltip\"),tooltipSpeedLimit=document.getElementById(\"overlay-tooltip-speedlimit\"),tooltipContainerBK=document.getElementById(\"bennekel-tooltip\"),document.addEventListener(\"mousemove\",t=>{xLocation=t.clientX,yLocation=t.clientY,tooltipContainerBM.style.left=xLocation+\"px\",tooltipContainerBM.style.top=yLocation+\"px\",tooltipContainerOL.style.left=xLocation+\"px\",tooltipContainerOL.style.top=yLocation+\"px\",tooltipContainerAQ.style.left=xLocation+\"px\",tooltipContainerAQ.style.top=yLocation+\"px\",tooltipContainerPC.style.left=xLocation+\"px\",tooltipContainerPC.style.top=yLocation+\"px\",tooltipContainerBK.style.left=xLocation+\"px\",tooltipContainerBK.style.top=yLocation+\"px\"}),sidebarjs=new SidebarJS.SidebarElement({backdropOpacity:0}),document.getElementById(\"slider-close\").addEventListener(\"click\",t=>{sidebarjs.close(),1==clickedPathActive&&(clickedPath[0].classList.remove(\"clickedNeighbor\"),clickedPathActive=!1),clickedPath=void 0}),sideContent=document.getElementById(\"sideContent\"),sideContent.setAttribute(\"aria-hidden\",\"false\"),selectedNeighbor=document.getElementById(\"selected-neighbor\"),totalpop=document.getElementById(\"demography-totalpop\"),men=document.getElementById(\"demography-men\"),women=document.getElementById(\"demography-women\"),age0_14=document.getElementById(\"demography-age0-14\"),age15_64=document.getElementById(\"demography-age15-64\"),age65=document.getElementById(\"demography-age65\"),dutch=document.getElementById(\"demography-dutch\"),immigrants=document.getElementById(\"demography-immigrants\"),single=document.getElementById(\"demography-single\"),wKids=document.getElementById(\"demography-wKids\"),income=document.getElementById(\"demography-income\"),foot=document.getElementById(\"demography-foot\"),bike=document.getElementById(\"demography-bike\"),auto=document.getElementById(\"demography-auto\"),transit=document.getElementById(\"demography-transit\"),gElem=basebuurt_svg.firstChild,pageHinder=document.getElementById(\"page-hinder\"),benekelModal=document.getElementById(\"Bennekel-modal\"),benekelModalClose=document.getElementById(\"Bennekel-modal-close\"),benekelModalClose.addEventListener(\"click\",()=>{benekelModal.setAttribute(\"aria-hidden\",\"true\"),setTimeout(()=>{pageHinder.setAttribute(\"aria-hidden\",\"true\")},500)}),basemapAttr=document.getElementById(\"basemap-attr\"),basemapInfo=document.getElementById(\"basemap-info\"),new MutationObserver(t=>{basemapAttr.classList.contains(\"mat-focused\")||basemapInfo.classList.remove(\"active\")}).observe(basemapAttr,{attributes:!0,attributeFilter:[\"class\"]})};const dataPath=\"/assets/data/\",basebuurt_path=dataPath+\"edh_buurt_base.json\",basestadsdeel_path=dataPath+\"edh_stadsdeel_base.json\",outline_path=dataPath+\"edh_outline.json\",bennekel_path=dataPath+\"bennekel.json\",bennekeldata_path=dataPath+\"bennekeldata.json\",traffic_path=dataPath+\"traffic.json\",bikeroutes_path=dataPath+\"bike_routes.json\",runningroutes_path=dataPath+\"running_routes.json\",sportsfacilities_path=dataPath+\"sports_facilities.json\",medicalfacilities_path=dataPath+\"medical_facilities.json\",communitycenters_path=dataPath+\"community_centers.json\",sportsshops_path=dataPath+\"sports_shops.json\",grocerystores_path=dataPath+\"grocery_stores.json\",fastfoods_path=dataPath+\"fast_food.json\",parksplaygrounds_path=dataPath+\"parks_playgrounds.json\",greenarea_path=dataPath+\"green_area.json\",airquality_path=dataPath+\"airquality_edh.json\",publicconcerns_path=dataPath+\"public_concerns.json\",demography_path=dataPath+\"edh_demography.json\",apiReq_buurt=fetch(basebuurt_path).then(t=>t.json()),apiReq_stadsdeel=fetch(basestadsdeel_path).then(t=>t.json()),apiReq_outline=fetch(outline_path).then(t=>t.json()),apiReq_bennekel=fetch(bennekel_path).then(t=>t.json()),apiReq_bennekeldata=fetch(bennekeldata_path).then(t=>t.json()),apiReq_traffic=fetch(traffic_path).then(t=>t.json()),apiReq_bikeroutes=fetch(bikeroutes_path).then(t=>t.json()),apiReq_runningroutes=fetch(runningroutes_path).then(t=>t.json()),apiReq_sportsfacilities=fetch(sportsfacilities_path).then(t=>t.json()),apiReq_medicalfacilities=fetch(medicalfacilities_path).then(t=>t.json()),apiReq_communitycenters=fetch(communitycenters_path).then(t=>t.json()),apiReq_sportsshops=fetch(sportsshops_path).then(t=>t.json()),apiReq_grocerystores=fetch(grocerystores_path).then(t=>t.json()),apiReq_fastfoods=fetch(fastfoods_path).then(t=>t.json()),apiReq_parksplaygrounds=fetch(parksplaygrounds_path).then(t=>t.json()),apiReq_greenarea=fetch(greenarea_path).then(t=>t.json()),apiReq_demography=fetch(demography_path).then(t=>t.json()),apiReq_airquality=fetch(airquality_path).then(t=>t.json()),apiReq_publicconcerns=fetch(publicconcerns_path).then(t=>t.json()),pushArray=(t,e)=>new Promise((n,o)=>{function i(){\"undefined\"!=t?(selectedAttribute=t,function(){let t=baseJson.features.length;for(let e=0;e<t;e++)dataArray.push(baseJson.features[e].properties[selectedAttribute])}()):window.setTimeout(i,500)}selectedAttribute=e,\"buurt\"==selectedAttribute?apiReq_buurt.then(t=>{baseJson=t,dataArray=[],i()}):\"stadsdeel\"==selectedAttribute&&apiReq_stadsdeel.then(t=>{baseJson=t,dataArray=[],i()}),n()}),legendCalc=t=>new Promise((t,e)=>{let n=dataArray.filter(function(t){return null!=t}),o=n.reduce(function(t,e){return Math.max(t,e)}),i=n.reduce(function(t,e){return Math.min(t,e)}),a=Math.round((o-i)/4);interval0=i,interval1=i+a-1,interval2=i+a,interval3=i+2*a-1,interval4=i+2*a,interval5=i+3*a-1,interval6=i+3*a,t()}),createLegend=t=>new Promise((e,n)=>{let o=document.getElementById(\"legend4a-txt\"),i=document.getElementById(\"legend3a-txt\"),a=document.getElementById(\"legend3b-txt\"),s=document.getElementById(\"legend2a-txt\"),r=document.getElementById(\"legend2b-txt\"),l=document.getElementById(\"legend1a-txt\"),d=document.getElementById(\"legend1b-txt\"),p=document.getElementById(\"legendTitle\");o.innerText=interval6,i.innerText=interval4,a.innerText=interval5,s.innerText=interval2,r.innerText=interval3,l.innerText=interval0,d.innerText=interval1,\"m_exercise\"==selectedAttribute?p.innerText=\"Moderate Exercise\":\"healthy\"==selectedAttribute?p.innerText=\"Healthy\":\"m_drinker\"==selectedAttribute?p.innerText=\"Drinker\":\"smoker\"==selectedAttribute?p.innerText=\"Smorker\":\"overweight\"==selectedAttribute?p.innerText=\"Overweight\":\"illness\"==selectedAttribute?p.innerText=\"Illness\":\"physical_p\"==selectedAttribute?p.innerText=\"Physical Unavailability\":\"depression\"==selectedAttribute?p.innerText=\"Depression\":\"loneliness\"==selectedAttribute&&(p.innerText=\"Loneliness\"),e(t)}),onRejectted=t=>{console.log(\"Promise Error\",t)},vizmaps=()=>{let t=new L.Map(\"map-container\",{scrollWheelZoom:!1}).setView([51.45,5.45],12);const e={Gray:L.esri.basemapLayer(\"Gray\"),Street:L.esri.basemapLayer(\"Streets\"),Satellite:L.esri.basemapLayer(\"Imagery\")};L.esri.basemapLayer(\"Gray\").addTo(t),L.control.layers(e).addTo(t),mapLayers={basemap_buurt:function(){let e=d3.geoTransform({point:function(e,n){let o=t.latLngToLayerPoint(new L.LatLng(n,e));this.stream.point(o.x,o.y)}}),n=d3.geoPath().projection(e),o=d3.select(t.getPanes().overlayPane).append(\"svg\").attr(\"id\",\"basemap-buurt\"),i=o.append(\"g\").attr(\"class\",\"leaflet-zoom-hide\");basebuurt_svg=document.getElementById(\"basemap-buurt\"),d3.json(basebuurt_path).then(function(e){let a=e,s=i.selectAll(\"path\").data(a.features).enter().append(\"path\");function r(){let t=n.bounds(a),e=t[0],r=t[1];o.attr(\"width\",r[0]-e[0]).attr(\"height\",r[1]-e[1]).style(\"left\",e[0]+\"px\").style(\"top\",e[1]+\"px\"),i.attr(\"transform\",\"translate(\"+-e[0]+\",\"+-e[1]+\")\");const l=t=>new Promise((e,o)=>{s.attr(\"d\",n).style(\"stroke\",\"rgb(187,187,187)\").style(\"stroke-width\",\"1px\").attr(\"class\",\"leaflet-interactive\").style(\"cursor\",\"pointer\").style(\"fill\",t=>t.properties[selectedAttribute]>=interval6?\"rgb(204,76,2)\":t.properties[selectedAttribute]>=interval4&t.properties[selectedAttribute]<interval6?\"rgb(254,153,41)\":t.properties[selectedAttribute]>=interval2&t.properties[selectedAttribute]<interval4?\"rgb(254,217,142)\":t.properties[selectedAttribute]>=interval0&t.properties[selectedAttribute]<interval2?\"rgb(255,255,212)\":\"rgb(212,212,212)\").style(\"opacity\",\"0\").transition().duration(500).style(\"opacity\",\"0.7\"),s.attr(\"d\",n).on(\"mouseover\",d).on(\"mouseout\",p).on(\"click\",c),e(t)});function d(t,e){console.log(\"mouseover\"),tooltipMoreData.setAttribute(\"aria-hidden\",\"false\"),d3.select(this).transition().style(\"opacity\",1).duration(200),tooltipPlace.innerText=e.properties.neighbor,tooltipContainerBM.setAttribute(\"aria-hidden\",\"false\"),tooltipValue.innerText=null!==e.properties[selectedAttribute]?e.properties[selectedAttribute]+\" %\":\"No Data\"}function p(t,e){tooltipContainerBM.setAttribute(\"aria-hidden\",\"true\"),tooltipMoreData.setAttribute(\"aria-hidden\",\"true\"),d3.select(this).transition().style(\"opacity\",.7).duration(200)}function c(t,e){console.log(\"ga log sent\"),gtag(\"event\",\"click\",{event_category:e.properties.neighbor+\"_clicked\",event_label:\"Neighborhoods\",value:0});let n=e.properties.neighbor;null==clickedPath&&0==clickedPathActive?(d3.select(this).classed(\"clickedNeighbor\",!0),clickedPath=document.getElementsByClassName(\"clickedNeighbor\"),gElem.appendChild(clickedPath[0]),clickedPathActive=!0):null!=clickedPath&&1==clickedPathActive?(clickedPath[0].classList.remove(\"clickedNeighbor\"),d3.select(this).classed(\"clickedNeighbor\",!0),clickedPath=document.getElementsByClassName(\"clickedNeighbor\"),gElem.appendChild(clickedPath[0])):null!=clickedPath&&0==clickedPathActive&&(d3.select(this).classed(\"clickedNeighbor\",!0),clickedPath=document.getElementsByClassName(\"clickedNeighbor\"),gElem.appendChild(clickedPath[0]),clickedPathActive=!0),apiReq_demography.then(t=>{let e,o=t,i=t.length;for(let a=0;a<i;a++)if(o[a].Buurten==n){e=o[a],selectedNeighbor.innerText=e.Buurten,totalpop.innerText=\"\"!=e.total_population?\"- \"+e.total_population:\"- No data\",men.innerText=\"\"!=e.men_2020?\"- \"+e.men_2020+\" %\":\"- No data\",women.innerText=\"\"!=e.women_2020?\"- \"+e.women_2020+\" %\":\"- No data\",age0_14.innerText=\"\"!=e[\"0-14_2020\"]?\"- \"+e[\"0-14_2020\"]+\" %\":\"- No data\",age15_64.innerText=\"\"!=e[\"15-64_2020\"]?\"- \"+e[\"15-64_2020\"]+\" %\":\"- No data\",age65.innerText=\"\"!=e[\"65andAbove_2020\"]?\"- \"+e[\"65andAbove_2020\"]+\" %\":\"- No data\",dutch.innerText=\"\"!=e.Dutch_2020?\"- \"+e.Dutch_2020+\" %\":\"- No data\",immigrants.innerText=\"\"!=e.immigrants_2020?\"- \"+e.immigrants_2020+\" %\":\"- No data\",single.innerText=\"\"!=e.single_2019?\"- \"+e.single_2019+\" %\":\"- No data\",wKids.innerText=\"\"!=e.w_kids_2019?\"- \"+e.w_kids_2019+\" %\":\"- No data\",income.innerText=\"\"!=e.avg_income_person_2019?\"- \"+e.avg_income_person_2019+\" EUR\":\"- No data\",foot.innerText=\"\"!=e.foot_2019?\"- \"+e.foot_2019+\" %\":\"- No data\",bike.innerText=\"\"!=e.fiets_2019?\"- \"+e.fiets_2019+\" %\":\"- No data\",auto.innerText=\"\"!=e.auto_2019?\"- \"+e.auto_2019+\" %\":\"- No data\",transit.innerText=\"\"!=e.transit_2019?\"- \"+e.transit_2019+\" %\":\"- No data\";break}}),sidebarjs.open()}bindDataBB=function(t,e){Promise.resolve().then(pushArray.bind(this,t,e)).then(legendCalc).then(l).then(createLegend).catch(onRejectted)},bindDataBB(\"m_exercise\",\"buurt\"),loader=document.getElementById(\"loader-bg\"),loader.setAttribute(\"aria-hidden\",\"true\")}t.on(\"moveend\",r),r()})},basemap_stadsdeel:function(){let e=d3.geoTransform({point:function(e,n){let o=t.latLngToLayerPoint(new L.LatLng(n,e));this.stream.point(o.x,o.y)}}),n=d3.geoPath().projection(e),o=d3.select(t.getPanes().overlayPane).append(\"svg\").attr(\"id\",\"basemap-stadsdeel\"),i=o.append(\"g\").attr(\"class\",\"leaflet-zoom-hide\");basestadsdeel_svg=document.getElementById(\"basemap-stadsdeel\"),1==mapInitialize&&basestadsdeel_svg.setAttribute(\"aria-hidden\",\"true\"),d3.json(basestadsdeel_path).then(function(e){geojson_bs=e;let a=i.selectAll(\"path\").data(geojson_bs.features).enter().append(\"path\");function s(){let t=n.bounds(geojson_bs),e=t[0],s=t[1];o.attr(\"width\",s[0]-e[0]).attr(\"height\",s[1]-e[1]).style(\"left\",e[0]+\"px\").style(\"top\",e[1]+\"px\"),i.attr(\"transform\",\"translate(\"+-e[0]+\",\"+-e[1]+\")\");const r=t=>new Promise((e,o)=>{a.attr(\"d\",n).style(\"stroke\",\"rgb(187,187,187)\").style(\"stroke-width\",\"1px\").attr(\"class\",\"leaflet-interactive\").style(\"cursor\",\"pointer\").style(\"fill\",t=>t.properties[selectedAttribute]>=interval6?\"rgb(204,76,2)\":t.properties[selectedAttribute]>=interval4&t.properties[selectedAttribute]<interval6?\"rgb(254,153,41)\":t.properties[selectedAttribute]>=interval2&t.properties[selectedAttribute]<interval4?\"rgb(254,217,142)\":t.properties[selectedAttribute]>=interval0&t.properties[selectedAttribute]<interval2?\"rgb(255,255,212)\":\"rgb(212,212,212)\").style(\"opacity\",\"0\").transition().duration(500).style(\"opacity\",\"0.7\"),a.attr(\"d\",n).on(\"mouseover\",l).on(\"mouseout\",d),e(t)});function l(t,e){d3.select(this).transition().style(\"opacity\",1).style(\"stroke\",\"rgb(0,0,0)\").duration(200),tooltipPlace.innerText=e.properties.districts,tooltipContainerBM.setAttribute(\"aria-hidden\",\"false\"),tooltipValue.innerText=null!=e.properties[selectedAttribute]?e.properties[selectedAttribute]+\" %\":\"No Data\"}function d(t,e){tooltipContainerBM.setAttribute(\"aria-hidden\",\"true\"),d3.select(this).transition().style(\"opacity\",.7).style(\"stroke\",\"rgb(187,187,187)\").duration(200)}bindDataBS=function(t,e){Promise.resolve().then(pushArray.bind(this,t,e)).then(legendCalc).then(r).then(createLegend).catch(onRejectted)},loader=document.getElementById(\"loader-bg\"),loader.setAttribute(\"aria-hidden\",\"true\")}t.on(\"moveend\",s),s()})},basemap_outline:function(){let e=d3.geoTransform({point:function(e,n){let o=t.latLngToLayerPoint(new L.LatLng(n,e));this.stream.point(o.x,o.y)}}),n=d3.geoPath().projection(e),o=d3.select(t.getPanes().overlayPane).append(\"svg\").attr(\"id\",\"basemap-outline\"),i=o.append(\"g\").attr(\"class\",\"leaflet-zoom-hide\");baseoutline_svg=document.getElementById(\"basemap-outline\"),d3.json(outline_path).then(function(e){geojson_bo=e;let a=i.selectAll(\"path\").data(geojson_bo.features).enter().append(\"path\");function s(){let t=n.bounds(geojson_bs),e=t[0],s=t[1];o.attr(\"width\",s[0]-e[0]).attr(\"height\",s[1]-e[1]).style(\"left\",e[0]+\"px\").style(\"top\",e[1]+\"px\"),i.attr(\"transform\",\"translate(\"+-e[0]+\",\"+-e[1]+\")\"),a.attr(\"d\",n).style(\"stroke\",\"#999999\").style(\"stroke-width\",\"3px\").attr(\"class\",\"leaflet-interactive\").style(\"fill\",\"none\").style(\"pointer-events\",\"none !important\").style(\"opacity\",\"0.9\"),loader=document.getElementById(\"loader-bg\"),loader.setAttribute(\"aria-hidden\",\"true\")}t.on(\"moveend\",s),s()})},bennekel:function(){let e=d3.geoTransform({point:function(e,n){let o=t.latLngToLayerPoint(new L.LatLng(n,e));this.stream.point(o.x,o.y)}}),n=d3.geoPath().projection(e),o=d3.select(t.getPanes().overlayPane).append(\"svg\").attr(\"id\",\"bennekel\"),i=o.append(\"g\").attr(\"class\",\"leaflet-zoom-hide\");bennekel_svg=document.getElementById(\"bennekel\"),1==mapInitialize&&bennekel_svg.setAttribute(\"aria-hidden\",\"true\"),d3.json(bennekel_path).then(function(e){geojson_bk=e;let a=i.selectAll(\"path\").data(geojson_bk.features).enter().append(\"path\");function s(){let t=n.bounds(geojson_bk),e=t[0],s=t[1];o.attr(\"width\",s[0]-e[0]).attr(\"height\",s[1]-e[1]).style(\"left\",e[0]+\"px\").style(\"top\",e[1]+\"px\"),i.attr(\"transform\",\"translate(\"+-e[0]+\",\"+-e[1]+\")\"),a.attr(\"d\",n).style(\"stroke\",\"#666666\").style(\"stroke-width\",\"2px\").attr(\"class\",\"leaflet-interactive\").style(\"cursor\",\"pointer\").style(\"fill\",\"rgb(27,50,141)\").style(\"opacity\",\"0.7\"),a.attr(\"d\",n).on(\"mouseover\",function(t,e){d3.select(this).transition().style(\"opacity\",1).style(\"stroke\",\"rgb(0,0,0)\").duration(200),tooltipContainerBK.setAttribute(\"aria-hidden\",\"false\")}).on(\"mouseout\",function(t,e){tooltipContainerBK.setAttribute(\"aria-hidden\",\"true\"),d3.select(this).transition().style(\"opacity\",.7).style(\"stroke\",\"rgb(187,187,187)\").duration(200)}).on(\"click\",function(t,e){pageHinder.setAttribute(\"aria-hidden\",\"false\"),setTimeout(()=>{benekelModal.setAttribute(\"aria-hidden\",\"false\")},500)}),loader=document.getElementById(\"loader-bg\"),loader.setAttribute(\"aria-hidden\",\"true\")}t.on(\"moveend\",s),s()})},traffic:function(){let e=d3.geoTransform({point:function(e,n){let o=t.latLngToLayerPoint(new L.LatLng(n,e));this.stream.point(o.x,o.y)}}),n=d3.geoPath().projection(e),o=d3.select(t.getPanes().overlayPane).append(\"svg\").attr(\"id\",\"traffic\"),i=o.append(\"g\").attr(\"class\",\"leaflet-zoom-hide\");traffic_svg=document.getElementById(\"traffic\"),1==mapInitialize&&traffic_svg.setAttribute(\"aria-hidden\",\"true\"),d3.json(traffic_path).then(function(e){geojson_tr=e;let a=i.selectAll(\"path\").data(geojson_tr.features).enter().append(\"path\");function s(){let e=n.bounds(geojson_tr),s=e[0],r=e[1];o.attr(\"width\",r[0]-s[0]).attr(\"height\",r[1]-s[1]).style(\"left\",s[0]+\"px\").style(\"top\",s[1]+\"px\").style(\"overflow\",\"visible\"),i.attr(\"transform\",\"translate(\"+-s[0]+\",\"+-s[1]+\")\");let l=t.getZoom();a.attr(\"d\",n).style(\"stroke\",\"#222222\").style(\"opacity\",t=>t.properties.max_speed>=100?\"1\":t.properties.max_speed<100&t.properties.max_speed>=75?\"0.75\":t.properties.max_speed<75&t.properties.max_speed>=50?\"0.5\":t.properties.max_speed<50&t.properties.max_speed>=25?\"0.25\":t.properties.max_speed<25?\"0\":void 0).style(\"stroke-width\",()=>l<=11?1:12==l?1.5:13==l?2:14==l?3:15==l?4:16==l?5:2).style(\"fill\",\"none\").style(\"pointer-events\",\"none\").style(\"cursor\",\"pointer\").attr(\"class\",\"pointer-release\"),a.attr(\"d\",n).on(\"mouseover\",function(t,e){console.log(\"mouseover tr\"),d3.select(this).transition().style(\"opacity\",1).style(\"stroke\",\"rgb(0,0,0)\").duration(200),tooltipContainerTR.setAttribute(\"aria-hidden\",\"false\")}).on(\"mouseout\",function(t,e){tooltipContainerTR.setAttribute(\"aria-hidden\",\"true\"),d3.select(this).transition().style(\"opacity\",.7).style(\"stroke\",\"rgb(187,187,187)\").duration(200)}),loader=document.getElementById(\"loader-bg\"),loader.setAttribute(\"aria-hidden\",\"true\")}t.on(\"moveend\",s),s()})},bike_routes:function(){let e=d3.geoTransform({point:function(e,n){let o=t.latLngToLayerPoint(new L.LatLng(n,e));this.stream.point(o.x,o.y)}}),n=d3.geoPath().projection(e),o=d3.select(t.getPanes().overlayPane).append(\"svg\").attr(\"id\",\"bike-routes\"),i=o.append(\"g\").attr(\"class\",\"leaflet-zoom-hide\");o.append(\"defs\").append(\"filter\").attr(\"id\",\"dot-blur\").append(\"feGaussianBlur\").attr(\"in\",\"SourceGraphic\").attr(\"stdDeviation\",1),bikeroutes_svg=document.getElementById(\"bike-routes\"),1==mapInitialize&&bikeroutes_svg.setAttribute(\"aria-hidden\",\"true\"),d3.json(bikeroutes_path).then(function(e){geojson_br=e;let a=i.selectAll(\"path\").data(geojson_br.features).enter().append(\"path\");function s(){let e=n.bounds(geojson_br),s=e[0],r=e[1];o.attr(\"width\",r[0]-s[0]).attr(\"height\",r[1]-s[1]).style(\"left\",s[0]+\"px\").style(\"top\",s[1]+\"px\").style(\"overflow\",\"visible\"),i.attr(\"transform\",\"translate(\"+-s[0]+\",\"+-s[1]+\")\");let l=t.getZoom();a.attr(\"d\",n).style(\"stroke\",\"rgb(170, 139, 21)\").style(\"opacity\",.7).style(\"stroke-width\",()=>l<=11?1:12==l?1.5:13==l?2:14==l?3:15==l?4:16==l?5:1).style(\"fill\",\"none\").attr(\"class\",\"pointer-release\"),loader=document.getElementById(\"loader-bg\"),loader.setAttribute(\"aria-hidden\",\"true\")}t.on(\"moveend\",s),s()})},running_routes:function(){let e=d3.geoTransform({point:function(e,n){let o=t.latLngToLayerPoint(new L.LatLng(n,e));this.stream.point(o.x,o.y)}}),n=d3.geoPath().projection(e),o=d3.select(t.getPanes().overlayPane).append(\"svg\").attr(\"id\",\"running-routes\"),i=o.append(\"g\").attr(\"class\",\"leaflet-zoom-hide\");runningroutes_svg=document.getElementById(\"running-routes\"),1==mapInitialize&&runningroutes_svg.setAttribute(\"aria-hidden\",\"true\"),d3.json(runningroutes_path).then(function(e){geojson_rr=e;let a=i.selectAll(\"path\").data(geojson_rr.features).enter().append(\"path\");function s(){let e=n.bounds(geojson_rr),s=e[0],r=e[1];o.attr(\"width\",r[0]-s[0]).attr(\"height\",r[1]-s[1]).style(\"left\",s[0]+\"px\").style(\"top\",s[1]+\"px\").style(\"overflow\",\"visible\"),i.attr(\"transform\",\"translate(\"+-s[0]+\",\"+-s[1]+\")\");let l=t.getZoom();a.attr(\"d\",n).style(\"stroke\",\"rgb(247,53,99)\").style(\"opacity\",.3).style(\"stroke-width\",()=>l<=11?2:12==l?3:13==l?4:14==l?5:15==l?6:16==l?7:3).style(\"fill\",\"none\").attr(\"class\",\"pointer-release\"),loader=document.getElementById(\"loader-bg\"),loader.setAttribute(\"aria-hidden\",\"true\")}t.on(\"moveend\",s),s()})},sports_facilities:function(){let e=d3.geoTransform({point:function(e,n){let o=t.latLngToLayerPoint(new L.LatLng(n,e));this.stream.point(o.x,o.y)}}),n=d3.geoPath().projection(e),o=d3.select(t.getPanes().overlayPane).append(\"svg\").attr(\"id\",\"sports-facilities\"),i=o.append(\"g\").attr(\"class\",\"leaflet-zoom-hide\");o.append(\"defs\").append(\"filter\").attr(\"id\",\"dot-blur\").append(\"feGaussianBlur\").attr(\"in\",\"SourceGraphic\").attr(\"stdDeviation\",1),sportsfacilities_svg=document.getElementById(\"sports-facilities\"),1==mapInitialize&&sportsfacilities_svg.setAttribute(\"aria-hidden\",\"true\"),d3.json(sportsfacilities_path).then(function(e){geojson_sf=e;let a=i.selectAll(\"path\").data(geojson_sf.features).enter().append(\"path\");function s(){let e=n.bounds(geojson_sf),s=e[0],r=e[1];o.attr(\"width\",r[0]-s[0]).attr(\"height\",r[1]-s[1]).style(\"left\",s[0]+\"px\").style(\"top\",s[1]+\"px\").style(\"overflow\",\"visible\"),i.attr(\"transform\",\"translate(\"+-s[0]+\",\"+-s[1]+\")\"),a.attr(\"d\",n).style(\"stroke\",\"#666666\").style(\"stroke-width\",\".5px\").attr(\"class\",\"leaflet-interactive\").style(\"cursor\",\"pointer\").style(\"fill\",\"rgb(254, 90, 60)\").style(\"opacity\",\"0\").transition().duration(500).style(\"opacity\",\"0.7\");let l=t.getZoom();console.log(l),a.attr(\"d\",n.pointRadius(l<=11?4:12==l?5:13==l?6:14==l?7:15==l?8:16==l?9:17==l?10:18==l?11:19==l?12:6)),a.attr(\"d\",n).on(\"mouseover\",function(t,e){d3.select(this).transition().style(\"opacity\",1).style(\"stroke-width\",\"1px\").duration(200),tooltipType.innerText=e.properties.type,tooltipContainerOL.setAttribute(\"aria-hidden\",\"false\"),tooltipName.innerText=null!==e.properties.name?e.properties.name:\"Not available\"}).on(\"mouseout\",function(t,e){tooltipContainerOL.setAttribute(\"aria-hidden\",\"true\"),d3.select(this).transition().style(\"opacity\",.7).style(\"stroke-width\",\".5px\").duration(200)}),loader=document.getElementById(\"loader-bg\"),loader.setAttribute(\"aria-hidden\",\"true\")}t.on(\"moveend\",s),s()})},medical_facilities:function(){let e=d3.geoTransform({point:function(e,n){let o=t.latLngToLayerPoint(new L.LatLng(n,e));this.stream.point(o.x,o.y)}}),n=d3.geoPath().projection(e),o=d3.select(t.getPanes().overlayPane).append(\"svg\").attr(\"id\",\"medical-facilities\"),i=o.append(\"g\").attr(\"class\",\"leaflet-zoom-hide\");o.append(\"defs\").append(\"filter\").attr(\"id\",\"dot-blur\").append(\"feGaussianBlur\").attr(\"in\",\"SourceGraphic\").attr(\"stdDeviation\",1),medicalfacilities_svg=document.getElementById(\"medical-facilities\"),1==mapInitialize&&medicalfacilities_svg.setAttribute(\"aria-hidden\",\"true\"),d3.json(medicalfacilities_path).then(function(e){geojson_mf=e;let a=i.selectAll(\"path\").data(geojson_mf.features).enter().append(\"path\");function s(){let e=n.bounds(geojson_mf),s=e[0],r=e[1];o.attr(\"width\",r[0]-s[0]).attr(\"height\",r[1]-s[1]).style(\"left\",s[0]+\"px\").style(\"top\",s[1]+\"px\").style(\"overflow\",\"visible\"),i.attr(\"transform\",\"translate(\"+-s[0]+\",\"+-s[1]+\")\"),a.attr(\"d\",n).style(\"stroke\",\"#666666\").style(\"stroke-width\",\".5px\").attr(\"class\",\"leaflet-interactive\").style(\"cursor\",\"pointer\").style(\"fill\",\"rgb(31,120,180)\").style(\"opacity\",\"0\").transition().duration(500).style(\"opacity\",\"0.7\");let l=t.getZoom();console.log(l),a.attr(\"d\",n.pointRadius(l<=11?4:12==l?5:13==l?6:14==l?7:15==l?8:16==l?9:17==l?10:18==l?11:19==l?12:6)),a.attr(\"d\",n).on(\"mouseover\",function(t,e){d3.select(this).transition().style(\"opacity\",1).style(\"stroke-width\",\"1px\").duration(200),tooltipType.innerText=e.properties.type,tooltipContainerOL.setAttribute(\"aria-hidden\",\"false\"),tooltipName.innerText=null!==e.properties.name?e.properties.name:\"Not available\"}).on(\"mouseout\",function(t,e){tooltipContainerOL.setAttribute(\"aria-hidden\",\"true\"),d3.select(this).transition().style(\"opacity\",.7).style(\"stroke-width\",\".5px\").duration(200)}),loader=document.getElementById(\"loader-bg\"),loader.setAttribute(\"aria-hidden\",\"true\")}t.on(\"moveend\",s),s()})},community_centers:function(){let e=d3.geoTransform({point:function(e,n){let o=t.latLngToLayerPoint(new L.LatLng(n,e));this.stream.point(o.x,o.y)}}),n=d3.geoPath().projection(e),o=d3.select(t.getPanes().overlayPane).append(\"svg\").attr(\"id\",\"community-centers\"),i=o.append(\"g\").attr(\"class\",\"leaflet-zoom-hide\");o.append(\"defs\").append(\"filter\").attr(\"id\",\"dot-blur\").append(\"feGaussianBlur\").attr(\"in\",\"SourceGraphic\").attr(\"stdDeviation\",1),communitycenters_svg=document.getElementById(\"community-centers\"),1==mapInitialize&&communitycenters_svg.setAttribute(\"aria-hidden\",\"true\"),d3.json(communitycenters_path).then(function(e){geojson_cc=e;let a=i.selectAll(\"path\").data(geojson_cc.features).enter().append(\"path\");function s(){let e=n.bounds(geojson_cc),s=e[0],r=e[1];o.attr(\"width\",r[0]-s[0]).attr(\"height\",r[1]-s[1]).style(\"left\",s[0]+\"px\").style(\"top\",s[1]+\"px\").style(\"overflow\",\"visible\"),i.attr(\"transform\",\"translate(\"+-s[0]+\",\"+-s[1]+\")\"),a.attr(\"d\",n).style(\"stroke\",\"#666666\").style(\"stroke-width\",\".5px\").attr(\"class\",\"leaflet-interactive\").style(\"cursor\",\"pointer\").style(\"fill\",\"rgb(244, 240, 52)\").style(\"opacity\",\"0\").transition().duration(500).style(\"opacity\",\"0.7\");let l=t.getZoom();console.log(l),a.attr(\"d\",n.pointRadius(l<=11?4:12==l?5:13==l?6:14==l?7:15==l?8:16==l?9:17==l?10:18==l?11:19==l?12:6)),a.attr(\"d\",n).on(\"mouseover\",function(t,e){d3.select(this).transition().style(\"opacity\",1).style(\"stroke-width\",\"1px\").duration(200),tooltipType.innerText=e.properties.type,tooltipContainerOL.setAttribute(\"aria-hidden\",\"false\"),tooltipName.innerText=null!==e.properties.name?e.properties.name:\"Not available\"}).on(\"mouseout\",function(t,e){tooltipContainerOL.setAttribute(\"aria-hidden\",\"true\"),d3.select(this).transition().style(\"opacity\",.7).style(\"stroke-width\",\".5px\").duration(200)}),loader=document.getElementById(\"loader-bg\"),loader.setAttribute(\"aria-hidden\",\"true\")}t.on(\"moveend\",s),s()})},sports_shops:function(){let e=d3.geoTransform({point:function(e,n){let o=t.latLngToLayerPoint(new L.LatLng(n,e));this.stream.point(o.x,o.y)}}),n=d3.geoPath().projection(e),o=d3.select(t.getPanes().overlayPane).append(\"svg\").attr(\"id\",\"sports-shops\"),i=o.append(\"g\").attr(\"class\",\"leaflet-zoom-hide\");o.append(\"defs\").append(\"filter\").attr(\"id\",\"dot-blur\").append(\"feGaussianBlur\").attr(\"in\",\"SourceGraphic\").attr(\"stdDeviation\",1),sportsshops_svg=document.getElementById(\"sports-shops\"),1==mapInitialize&&sportsshops_svg.setAttribute(\"aria-hidden\",\"true\"),d3.json(sportsshops_path).then(function(e){geojson_ss=e;let a=i.selectAll(\"path\").data(geojson_ss.features).enter().append(\"path\");function s(){let e=n.bounds(geojson_ss),s=e[0],r=e[1];o.attr(\"width\",r[0]-s[0]).attr(\"height\",r[1]-s[1]).style(\"left\",s[0]+\"px\").style(\"top\",s[1]+\"px\").style(\"overflow\",\"visible\"),i.attr(\"transform\",\"translate(\"+-s[0]+\",\"+-s[1]+\")\"),a.attr(\"d\",n).style(\"stroke\",\"#666666\").style(\"stroke-width\",\".5px\").attr(\"class\",\"leaflet-interactive\").style(\"cursor\",\"pointer\").style(\"fill\",\"rgb(134, 87, 147)\").style(\"opacity\",\"0\").transition().duration(500).style(\"opacity\",\"0.7\");let l=t.getZoom();console.log(l),a.attr(\"d\",n.pointRadius(l<=11?4:12==l?5:13==l?6:14==l?7:15==l?8:16==l?9:17==l?10:18==l?11:19==l?12:6)),a.attr(\"d\",n).on(\"mouseover\",function(t,e){d3.select(this).transition().style(\"opacity\",1).style(\"stroke-width\",\"1px\").duration(200),tooltipType.innerText=e.properties.type,tooltipContainerOL.setAttribute(\"aria-hidden\",\"false\"),tooltipName.innerText=null!==e.properties.name?e.properties.name:\"Not available\"}).on(\"mouseout\",function(t,e){tooltipContainerOL.setAttribute(\"aria-hidden\",\"true\"),d3.select(this).transition().style(\"opacity\",.7).style(\"stroke-width\",\".5px\").duration(200)}),loader=document.getElementById(\"loader-bg\"),loader.setAttribute(\"aria-hidden\",\"true\")}t.on(\"moveend\",s),s()})},grocery_stores:function(){let e=d3.geoTransform({point:function(e,n){let o=t.latLngToLayerPoint(new L.LatLng(n,e));this.stream.point(o.x,o.y)}}),n=d3.geoPath().projection(e),o=d3.select(t.getPanes().overlayPane).append(\"svg\").attr(\"id\",\"grocery-stores\"),i=o.append(\"g\").attr(\"class\",\"leaflet-zoom-hide\");o.append(\"defs\").append(\"filter\").attr(\"id\",\"dot-blur\").append(\"feGaussianBlur\").attr(\"in\",\"SourceGraphic\").attr(\"stdDeviation\",1);let a=document.getElementById(\"grocery-stores\");1==mapInitialize&&a.setAttribute(\"aria-hidden\",\"true\"),d3.json(grocerystores_path).then(function(e){geojson_gs=e;let a=i.selectAll(\"path\").data(geojson_gs.features).enter().append(\"path\");function s(){let e=n.bounds(geojson_gs),s=e[0],r=e[1];o.attr(\"width\",r[0]-s[0]).attr(\"height\",r[1]-s[1]).style(\"left\",s[0]+\"px\").style(\"top\",s[1]+\"px\").style(\"overflow\",\"visible\"),i.attr(\"transform\",\"translate(\"+-s[0]+\",\"+-s[1]+\")\"),a.attr(\"d\",n).style(\"stroke\",\"#666666\").style(\"stroke-width\",\".5px\").attr(\"class\",\"leaflet-interactive\").style(\"cursor\",\"pointer\").style(\"fill\",\"rgb(121, 164, 167)\").style(\"opacity\",\"0\").transition().duration(500).style(\"opacity\",\"0.7\");let l=t.getZoom();console.log(l),a.attr(\"d\",n.pointRadius(l<=11?4:12==l?5:13==l?6:14==l?7:15==l?8:16==l?9:17==l?10:18==l?11:19==l?12:6)),a.attr(\"d\",n).on(\"mouseover\",function(t,e){d3.select(this).transition().style(\"opacity\",1).style(\"stroke-width\",\"1px\").duration(200),tooltipType.innerText=e.properties.type,tooltipContainerOL.setAttribute(\"aria-hidden\",\"false\"),tooltipName.innerText=null!==e.properties.name?e.properties.name:\"Not available\"}).on(\"mouseout\",function(t,e){tooltipContainerOL.setAttribute(\"aria-hidden\",\"true\"),d3.select(this).transition().style(\"opacity\",.7).style(\"stroke-width\",\".5px\").duration(200)}),loader=document.getElementById(\"loader-bg\"),loader.setAttribute(\"aria-hidden\",\"true\")}t.on(\"moveend\",s),s()})},fast_foods:function(){let e=d3.geoTransform({point:function(e,n){let o=t.latLngToLayerPoint(new L.LatLng(n,e));this.stream.point(o.x,o.y)}}),n=d3.geoPath().projection(e),o=d3.select(t.getPanes().overlayPane).append(\"svg\").attr(\"id\",\"fast-foods\"),i=o.append(\"g\").attr(\"class\",\"leaflet-zoom-hide\");o.append(\"defs\").append(\"filter\").attr(\"id\",\"dot-blur\").append(\"feGaussianBlur\").attr(\"in\",\"SourceGraphic\").attr(\"stdDeviation\",1);let a=document.getElementById(\"fast-foods\");1==mapInitialize&&a.setAttribute(\"aria-hidden\",\"true\"),d3.json(fastfoods_path).then(function(e){geojson_ff=e;let a=i.selectAll(\"path\").data(geojson_ff.features).enter().append(\"path\");function s(){let e=n.bounds(geojson_ff),s=e[0],r=e[1];o.attr(\"width\",r[0]-s[0]).attr(\"height\",r[1]-s[1]).style(\"left\",s[0]+\"px\").style(\"top\",s[1]+\"px\").style(\"overflow\",\"visible\"),i.attr(\"transform\",\"translate(\"+-s[0]+\",\"+-s[1]+\")\"),a.attr(\"d\",n).style(\"stroke\",\"#666666\").style(\"stroke-width\",\".5px\").attr(\"class\",\"leaflet-interactive\").style(\"cursor\",\"pointer\").style(\"fill\",\"rgb(164, 101, 30)\").style(\"opacity\",\"0\").transition().duration(500).style(\"opacity\",\"0.7\");let l=t.getZoom();console.log(l),a.attr(\"d\",n.pointRadius(l<=11?4:12==l?5:13==l?6:14==l?7:15==l?8:16==l?9:17==l?10:18==l?11:19==l?12:6)),a.attr(\"d\",n).on(\"mouseover\",function(t,e){d3.select(this).transition().style(\"opacity\",1).style(\"stroke-width\",\"1px\").duration(200),tooltipContainerPC.setAttribute(\"aria-hidden\",\"false\")}).on(\"mouseout\",function(t,e){tooltipContainerPC.setAttribute(\"aria-hidden\",\"true\"),d3.select(this).transition().style(\"opacity\",.7).style(\"stroke-width\",\".5px\").duration(200)}),loader=document.getElementById(\"loader-bg\"),loader.setAttribute(\"aria-hidden\",\"true\")}t.on(\"moveend\",s),s()})},public_concerns:function(){let e=d3.geoTransform({point:function(e,n){let o=t.latLngToLayerPoint(new L.LatLng(n,e));this.stream.point(o.x,o.y)}}),n=d3.geoPath().projection(e),o=d3.select(t.getPanes().overlayPane).append(\"svg\").attr(\"id\",\"public-concerns\"),i=o.append(\"g\").attr(\"class\",\"leaflet-zoom-hide\"),a=document.getElementById(\"public-concerns\");1==mapInitialize&&a.setAttribute(\"aria-hidden\",\"true\"),d3.json(publicconcerns_path).then(function(e){geojson_pc=e;let a=i.selectAll(\"path\").data(geojson_pc.features).enter().append(\"path\");function s(){let e=n.bounds(geojson_pc),s=e[0],r=e[1];o.attr(\"width\",r[0]-s[0]).attr(\"height\",r[1]-s[1]).style(\"left\",s[0]+\"px\").style(\"top\",s[1]+\"px\").style(\"overflow\",\"visible\"),i.attr(\"transform\",\"translate(\"+-s[0]+\",\"+-s[1]+\")\"),a.attr(\"d\",n).style(\"stroke\",\"#666666\").style(\"stroke-width\",\".5px\").attr(\"class\",\"leaflet-interactive\").style(\"cursor\",\"pointer\").style(\"fill\",t=>\"Noise problem\"==t.properties.onderwerp?\"rgb(253,192,134)\":\"Dirty pavement\"==t.properties.onderwerp?\"rgb(56,108,176)\":\"Sports accommodation\"==t.properties.onderwerp?\"rgb(255,255,153)\":\"Playground equipment\"==t.properties.onderwerp?\"rgb(127,201,127)\":\"Unsafe traffic\"==t.properties.onderwerp?\"rgb(240,2,127)\":\"Bad odor\"==t.properties.onderwerp?\"rgb(190,174,212)\":void 0).style(\"opacity\",\"0\").transition().duration(500).style(\"opacity\",\"0.7\");let l=t.getZoom();console.log(l),a.attr(\"d\",n.pointRadius(l<=11?4:12==l?5:13==l?6:14==l?7:15==l?8:16==l?9:17==l?10:18==l?11:19==l?12:6)),a.attr(\"d\",n).on(\"mouseover\",function(t,e){console.log(\"mouseover\"),d3.select(this).transition().style(\"opacity\",1).style(\"stroke-width\",\"1px\").duration(200),tooltipConcernsTopic.innerText=e.properties.onderwerp,tooltipConcernsTime.innerText=e.properties.aangemaakt,tooltipContainerPC.setAttribute(\"aria-hidden\",\"false\")}).on(\"mouseout\",function(t,e){tooltipContainerPC.setAttribute(\"aria-hidden\",\"true\"),d3.select(this).transition().style(\"opacity\",.7).style(\"stroke-width\",\".5px\").duration(200)}),loader=document.getElementById(\"loader-bg\"),loader.setAttribute(\"aria-hidden\",\"true\")}t.on(\"moveend\",s),s()})},air_quality:function(){let e=d3.geoTransform({point:function(e,n){let o=t.latLngToLayerPoint(new L.LatLng(n,e));this.stream.point(o.x,o.y)}}),n=d3.geoPath().projection(e),o=d3.select(t.getPanes().overlayPane).append(\"svg\").attr(\"id\",\"air-quality\"),i=o.append(\"g\").attr(\"class\",\"leaflet-zoom-hide\");o.append(\"defs\").append(\"filter\").attr(\"id\",\"dot-blur\").append(\"feGaussianBlur\").attr(\"in\",\"SourceGraphic\").attr(\"stdDeviation\",\"10\"),airquality_svg=document.getElementById(\"air-quality\"),1==mapInitialize&&airquality_svg.setAttribute(\"aria-hidden\",\"true\"),d3.json(airquality_path).then(function(e){geojson_aq=e;let a=i.selectAll(\"path\").data(geojson_aq.features).enter().append(\"path\");function s(){let e=n.bounds(geojson_aq),s=e[0],r=e[1];o.attr(\"width\",r[0]-s[0]).attr(\"height\",r[1]-s[1]).style(\"left\",s[0]+\"px\").style(\"top\",s[1]+\"px\").style(\"overflow\",\"visible\"),i.attr(\"transform\",\"translate(\"+-s[0]+\",\"+-s[1]+\")\"),a.attr(\"d\",n).style(\"stroke\",\"#999\").style(\"stroke-width\",\"0px\").attr(\"class\",\"leaflet-interactive\").style(\"cursor\",\"pointer\").style(\"fill\",t=>t.properties[\"PM2.5\"]>=7?\"rgb(115,115,115)\":t.properties[\"PM2.5\"]>=4&t.properties[\"PM2.5\"]<7?\"rgb(189,189,189)\":t.properties[\"PM2.5\"]<4?\"rgb(240,240,240)\":void 0).style(\"filter\",\"url(#dot-blur)\").style(\"opacity\",\"0\").transition().duration(500).style(\"opacity\",\"0.8\");let l=t.getZoom();console.log(l),a.attr(\"d\",n.pointRadius(l<=11?8:12==l?10:13==l?12:14==l?14:15==l?16:16==l?18:17==l||18==l?22:19==l?24:12)),a.attr(\"d\",n).on(\"mouseover\",function(t,e){d3.select(this).transition().style(\"opacity\",1).style(\"stroke-width\",\"1px\").duration(200),console.log(e.properties.PM1),tooltipPM1.innerText=null!=e.properties.PM1?e.properties.PM1+\" μg/m3\":\"Not available\",tooltipPM25.innerText=null!=e.properties[\"PM2.5\"]?e.properties[\"PM2.5\"]+\" μg/m3\":\"Not available\",tooltipPM10.innerText=null!=e.properties.PM10?e.properties.PM10+\" μg/m3\":\"Not available\",tooltipContainerAQ.setAttribute(\"aria-hidden\",\"false\")}).on(\"mouseout\",function(t,e){tooltipContainerAQ.setAttribute(\"aria-hidden\",\"true\"),d3.select(this).transition().style(\"opacity\",.8).style(\"stroke-width\",\"0px\").duration(200)}),loader=document.getElementById(\"loader-bg\"),loader.setAttribute(\"aria-hidden\",\"true\")}t.on(\"moveend\",s),s()})},parks_playgrounds:function(){let e=d3.geoTransform({point:function(e,n){let o=t.latLngToLayerPoint(new L.LatLng(n,e));this.stream.point(o.x,o.y)}}),n=d3.geoPath().projection(e),o=d3.select(t.getPanes().overlayPane).append(\"svg\").attr(\"id\",\"parks-playgrounds\"),i=o.append(\"g\").attr(\"class\",\"leaflet-zoom-hide\");parksplaygrounds_svg=document.getElementById(\"parks-playgrounds\"),1==mapInitialize&&parksplaygrounds_svg.setAttribute(\"aria-hidden\",\"true\"),d3.json(parksplaygrounds_path).then(function(e){geojson_pp=e;let a=i.selectAll(\"path\").data(geojson_pp.features).enter().append(\"path\");function s(){let t=n.bounds(geojson_pp),e=t[0],s=t[1];o.attr(\"width\",s[0]-e[0]).attr(\"height\",s[1]-e[1]).style(\"left\",e[0]+\"px\").style(\"top\",e[1]+\"px\").style(\"overflow\",\"visible\"),i.attr(\"transform\",\"translate(\"+-e[0]+\",\"+-e[1]+\")\"),a.attr(\"d\",n).attr(\"class\",\"leaflet-interactive\").style(\"cursor\",\"pointer\").style(\"fill\",\"green\").style(\"opacity\",\"0\").transition().duration(500).style(\"opacity\",\"0.7\"),a.attr(\"d\",n).on(\"mouseover\",function(t,e){d3.select(this).transition().style(\"opacity\",.4).duration(200),tooltipType.innerText=e.properties.type,tooltipContainerOL.setAttribute(\"aria-hidden\",\"false\"),tooltipName.innerText=null!==e.properties.name?e.properties.name:\"Not available\"}).on(\"mouseout\",function(t,e){tooltipContainerOL.setAttribute(\"aria-hidden\",\"true\"),d3.select(this).transition().style(\"opacity\",.7).duration(200)}),loader=document.getElementById(\"loader-bg\"),loader.setAttribute(\"aria-hidden\",\"true\")}t.on(\"moveend\",s),s()})},green_area:function(){let e=d3.geoTransform({point:function(e,n){let o=t.latLngToLayerPoint(new L.LatLng(n,e));this.stream.point(o.x,o.y)}}),n=d3.geoPath().projection(e),o=d3.select(t.getPanes().overlayPane).append(\"svg\").attr(\"id\",\"green-area\"),i=o.append(\"g\").attr(\"class\",\"leaflet-zoom-hide\");greenarea_svg=document.getElementById(\"green-area\"),1==mapInitialize&&greenarea_svg.setAttribute(\"aria-hidden\",\"true\"),d3.json(greenarea_path).then(function(e){geojson_ga=e;let a=i.selectAll(\"path\").data(geojson_ga.features).enter().append(\"path\");function s(){let t=n.bounds(geojson_ga),e=t[0],s=t[1];o.attr(\"width\",s[0]-e[0]).attr(\"height\",s[1]-e[1]).style(\"left\",e[0]+\"px\").style(\"top\",e[1]+\"px\").style(\"overflow\",\"visible\"),i.attr(\"transform\",\"translate(\"+-e[0]+\",\"+-e[1]+\")\"),a.attr(\"d\",n).attr(\"class\",\"leaflet-interactive\").style(\"cursor\",\"pointer\").style(\"fill\",\"rgb(109,192,103)\").style(\"opacity\",\"0\").transition().duration(500).style(\"opacity\",\"0.7\"),a.attr(\"d\",n).on(\"mouseover\",function(t,e){function n(t){return t[0].toUpperCase()+t.slice(1)}d3.select(this).transition().style(\"opacity\",.4).duration(200),tooltipType.innerText=n(e.properties.type),tooltipContainerOL.setAttribute(\"aria-hidden\",\"false\"),tooltipName.innerText=null!==e.properties.name?n(e.properties.name):\"Not available\"}).on(\"mouseout\",function(t,e){tooltipContainerOL.setAttribute(\"aria-hidden\",\"true\"),d3.select(this).transition().style(\"opacity\",.7).duration(200)}),loader=document.getElementById(\"loader-bg\"),loader.setAttribute(\"aria-hidden\",\"true\")}t.on(\"moveend\",s),s()})}},1==mapInitialize&&(mapLayers.basemap_buurt(),mapLayers.basemap_stadsdeel(),mapLayers.basemap_outline(),mapLayers.bennekel(),mapLayers.green_area(),mapLayers.parks_playgrounds(),mapLayers.traffic(),mapLayers.bike_routes(),mapLayers.running_routes(),mapLayers.sports_facilities(),mapLayers.medical_facilities(),mapLayers.community_centers(),mapLayers.sports_shops(),mapLayers.grocery_stores(),mapLayers.fast_foods(),mapLayers.public_concerns(),mapLayers.air_quality()),changeBasemap=function(t){baseStatus=t,console.log(t),\"stadsdeel\"==t?(basebuurt_svg.setAttribute(\"aria-hidden\",\"true\"),console.log(basebuurt_svg),basestadsdeel_svg.setAttribute(\"aria-hidden\",\"false\"),bindDataBS(selectedAttribute,\"stadsdeel\"),console.log(basestadsdeel_svg)):\"buurt\"==t&&(basebuurt_svg.setAttribute(\"aria-hidden\",\"false\"),basestadsdeel_svg.setAttribute(\"aria-hidden\",\"true\"),bindDataBB(selectedAttribute,\"buurt\"))},changeAttr=function(t){selectedAttribute=t,\"buurt\"==baseStatus?(bindDataBB(t,baseStatus),clickedPathActive=!1):\"stadsdeel\"==baseStatus&&bindDataBS(t,baseStatus),basemapAttr.setAttribute(\"aria-serected\",!0),basemapInfo.classList.add(\"active\")},addOverlay=function(t,e){1==t&&null!=e?document.getElementById(e).setAttribute(\"aria-hidden\",\"false\"):0==t&&null!=e&&document.getElementById(e).setAttribute(\"aria-hidden\",\"true\")}};function initializeMap(){mapInitialize=!0,baseStatus=\"buurt\",vizmaps()}d3.json(bennekeldata_path).then(function(t){console.log(t),br1Data=t,t=t.sort(function(t,e){return d3.ascending(t.Number,e.Number)});let e=d3.select(\"#Bennekel-modal_inner\").append(\"svg\").attr(\"width\",600).attr(\"height\",600).append(\"g\").attr(\"transform\",\"translate(280,120)\"),n=d3.scaleLinear().rangeRound([0,280]).domain([0,d3.max(t,function(t){return t.Number})]),o=d3.scaleBand().rangeRound([460,0],.1).domain(t.map(function(t){return t.Reasons})),i=d3.axisLeft(o).scale(o).tickSize(0);d3.axisBottom(n),e.append(\"g\").attr(\"class\",\"yAxis\").call(i),d3.select(\".yAxis\").select(\"path\").remove(),d3.select(\".yAxis\").style(\"font-size\",\"12px\").style(\"color\",\"#222\").attr(\"transform\",\"translate(-4,-4)\");let a=e.selectAll(\".bar\").data(t).enter().append(\"g\");a.append(\"rect\").attr(\"class\",\"bar\").attr(\"y\",function(t){return o(t.Reasons)}).attr(\"height\",o.bandwidth()-6).attr(\"x\",0).style(\"fill\",\"#5f89ad\").attr(\"width\",function(t){return n(t.Number)}),a.append(\"text\").attr(\"class\",\"label\").attr(\"y\",function(t){return o(t.Reasons)+12}).attr(\"x\",function(t){return n(t.Number)+4}).text(function(t){return t.Number}),e.selectAll(\".label\").style(\"fill\",\"#5f89ad\")}),function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?e(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],e):e((t=\"undefined\"!=typeof globalThis?globalThis:t||self).SidebarJS={})}(this,function(t){\"use strict\";function e(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,o)}return n}function n(t){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?e(Object(o),!0).forEach(function(e){r(t,e,o[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(o)):e(Object(o)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(o,e))})}return t}function o(t){return(o=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}function i(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function a(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function s(t,e,n){return e&&a(t.prototype,e),n&&a(t,n),t}function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var l=\"sidebarjs\",d=\"sidebarjs-content\",p=\"\".concat(l,\"--is-visible\"),c=\"\".concat(l,\"--is-moving\"),u=[\"left\",\"right\"],h={passive:!0},m=\"touchstart\",y=\"touchmove\",g=\"touchend\",f=[\"toggle\",\"open\",\"close\"],b={documentMinSwipeX:10,documentSwipeRange:40,responsive:!1,position:\"left\",backdropOpacity:.3};function v(){return Boolean(window.CSS&&window.CSS.number)}function _(t){var e=document.createElement(\"div\");return e.setAttribute(t,\"\"),e}function k(t,e){return t&&\"boolean\"==typeof e?t.sidebarjsListener=e:!!t.sidebarjsListener}function L(t){return t?(t.setAttribute(d,\"\"),t):document.querySelector(\"[\".concat(d,\"]\"))}function x(t,e){for(var n=0;n<f.length;n++)for(var o=f[n],i=document.querySelectorAll(\"[\".concat(l,\"-\").concat(o,'=\"').concat(t,'\"]')),a=0;a<i.length;a++)e(i[a],o)}function A(t){return t.target.hasAttribute(\"\".concat(l,\"-backdrop\"))}function P(t){t&&t()}var w=function(){function t(){var e=this,o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};i(this,t),this.toggle=function(){e.isVisible()?e.close():e.open()},this.open=function(){e.addComponentClass(p),e.setBackdropOpacity(e.backdropOpacity)},this.close=function(){e.removeComponentClass(p),e.clearStyle(e.backdrop)},this._onTouchStart=function(t){e.initialTouch=t.touches[0].pageX},this._onTouchMove=function(t){var n=-(e.initialTouch-t.touches[0].clientX);e.container.clientWidth+(e.hasLeftPosition()?n:-n)<=e.container.clientWidth&&(e.touchMoveSidebar=Math.abs(n),e.moveSidebar(n))},this._onTouchEnd=function(){e.removeComponentClass(c),e.clearStyle(e.container),e.clearStyle(e.backdrop),e.touchMoveSidebar>e.container.clientWidth/3.5?e.close():e.open(),e.initialTouch=null,e.touchMoveSidebar=null},this._onSwipeOpenStart=function(t){if(!A(t)){var n=t.touches[0].clientX;(e.hasLeftPosition()?n:document.body.clientWidth-n)<e.documentSwipeRange&&e._onTouchStart(t)}},this._onSwipeOpenMove=function(t){if(!A(t)&&e.initialTouch&&!e.isVisible()){var n=t.touches[0].clientX-e.initialTouch,o=e.hasLeftPosition(),i=o?n:-n,a=e.container.clientWidth-i;a>0&&i>=e.documentMinSwipeX&&(e.openMovement=o?-a:a,e.moveSidebar(e.openMovement))}},this._onSwipeOpenEnd=function(){e.openMovement&&(e.openMovement=null,e._onTouchEnd())},this._onTransitionStart=function(){var t=e.getTransitionType();(t.open||t.close)&&e.toggleTransitionClass(!0)},this._onTransitionEnd=function(){var t=e.getTransitionType(),n=t.open,o=t.close,i=t.isVisible;(n||o)&&e.toggleTransitionClass(!1),n?(e._wasVisible=!0,P(e._emitOnOpen)):o&&(e._wasVisible=!1,P(e._emitOnClose)),e._emitOnChangeVisibility&&e._emitOnChangeVisibility({isVisible:i})},this.nativeGestures=new Map([[m,this._onTouchStart],[y,this._onTouchMove],[g,this._onTouchEnd]]),this.nativeOpenGestures=new Map([[m,this._onSwipeOpenStart],[y,this._onSwipeOpenMove],[g,this._onSwipeOpenEnd]]);var a=n(n({},b),o),s=a.container&&a.backdrop;if(this.component=a.component||document.querySelector(\"[\".concat(l,\"]\")),this.container=s?a.container:_(\"\".concat(l,\"-container\")),this.backdrop=s?a.backdrop:_(\"\".concat(l,\"-backdrop\")),this.documentMinSwipeX=a.documentMinSwipeX,this.documentSwipeRange=a.documentSwipeRange,this.nativeSwipe=!1!==a.nativeSwipe,this.nativeSwipeOpen=!1!==a.nativeSwipeOpen,this.isStyleMapSupported=v(),this.responsive=Boolean(a.responsive),this.mainContent=L(a.mainContent),this.backdropOpacity=a.backdropOpacity,this.backdropOpacityRatio=1/a.backdropOpacity,this._emitOnOpen=a.onOpen,this._emitOnClose=a.onClose,this._emitOnChangeVisibility=a.onChangeVisibility,!s)try{this.transcludeContent()}catch(r){throw new Error(\"You must define an element with [sidebarjs] attribute\")}this.setSwipeGestures(!0),(this.responsive||this.mainContent)&&this.setResponsive(),this.setPosition(a.position),this.addAttrsEventsListeners(this.component.getAttribute(l)),this.addTransitionListener(),this.backdrop.addEventListener(\"click\",this.close,h)}return s(t,[{key:\"isVisible\",value:function(){return this.component.classList.contains(p)}},{key:\"destroy\",value:function(){var t=this;for(this.removeNativeGestures(),this.container.removeEventListener(\"transitionstart\",this._onTransitionStart),this.container.removeEventListener(\"transitionend\",this._onTransitionEnd),this.backdrop.removeEventListener(\"click\",this.close),this.removeNativeOpenGestures(),this.removeAttrsEventsListeners(this.component.getAttribute(l)),this.removeComponentClassPosition();this.container.firstElementChild;)this.component.appendChild(this.container.firstElementChild);this.component.removeChild(this.container),this.component.removeChild(this.backdrop),Object.keys(this).forEach(function(e){return t[e]=null})}},{key:\"setPosition\",value:function(t){var e=this;this.addComponentClass(c),this.position=u.indexOf(t)>=0?t:\"left\";var n=1===(document.querySelectorAll(\"[\".concat(l,\"]\"))||[]).length;this.removeComponentClassPosition(n),this.addComponentClass(\"\".concat(l,\"--\").concat(this.position)),this.responsive&&this.mainContent&&this.mainContent.classList.add(\"\".concat(d,\"--\").concat(this.position)),setTimeout(function(){return e.component&&e.removeComponentClass(c)},200)}},{key:\"addAttrsEventsListeners\",value:function(t){var e=this;x(t,function(t,n){k(t)||(t.addEventListener(\"click\",e[n],h),k(t,!0))})}},{key:\"removeAttrsEventsListeners\",value:function(t){var e=this;x(t,function(t,n){k(t)&&(t.removeEventListener(\"click\",e[n]),k(t,!1))})}},{key:\"setSwipeGestures\",value:function(t){if(\"boolean\"!=typeof t)throw new Error(\"You provided a \".concat(o(t),\" value but setSwipeGestures needs a boolean value.\"));this.nativeSwipe&&(t?this.addNativeGestures():this.removeNativeGestures(),this.nativeSwipeOpen&&(t?this.addNativeOpenGestures():this.removeNativeOpenGestures()))}},{key:\"getTransitionType\",value:function(){var t=this.isVisible();return{open:t&&!this._wasVisible,close:!t&&this._wasVisible,isVisible:t}}},{key:\"toggleTransitionClass\",value:function(t){this.toggleComponentClass(\"sidebarjs--transition-end\",!t),this.toggleComponentClass(\"sidebarjs--transition-start\",t)}},{key:\"addTransitionListener\",value:function(){this._wasVisible=this.isVisible(),this.container.addEventListener(\"transitionstart\",this._onTransitionStart,h),this.container.addEventListener(\"transitionend\",this._onTransitionEnd,h)}},{key:\"removeComponentClassPosition\",value:function(t){for(var e=0;e<u.length;e++)this.removeComponentClass(\"\".concat(l,\"--\").concat(u[e])),t&&this.mainContent&&this.mainContent.classList.remove(\"\".concat(d,\"--\").concat(u[e]))}},{key:\"hasLeftPosition\",value:function(){return\"left\"===this.position}},{key:\"hasRightPosition\",value:function(){return\"right\"===this.position}},{key:\"transcludeContent\",value:function(){for(;this.component.firstChild;)this.container.appendChild(this.component.firstChild);for(;this.component.firstChild;)this.component.removeChild(this.component.firstChild);this.component.appendChild(this.container),this.component.appendChild(this.backdrop)}},{key:\"addNativeGestures\",value:function(){var t=this;this.nativeGestures.forEach(function(e,n){t.component.addEventListener(n,e,h)})}},{key:\"removeNativeGestures\",value:function(){var t=this;this.nativeGestures.forEach(function(e,n){t.component.removeEventListener(n,e)})}},{key:\"addNativeOpenGestures\",value:function(){this.nativeOpenGestures.forEach(function(t,e){document.addEventListener(e,t,h)})}},{key:\"removeNativeOpenGestures\",value:function(){this.nativeOpenGestures.forEach(function(t,e){document.removeEventListener(e,t)})}},{key:\"moveSidebar\",value:function(t){this.addComponentClass(c),this.applyStyle(this.container,\"transform\",\"translate(\".concat(t,\"px, 0)\"),!0),this.updateBackdropOpacity(t)}},{key:\"updateBackdropOpacity\",value:function(t){var e=1-Math.abs(t)/this.container.clientWidth;this.setBackdropOpacity(e/this.backdropOpacityRatio)}},{key:\"setBackdropOpacity\",value:function(t){this.applyStyle(this.backdrop,\"opacity\",t.toString())}},{key:\"setResponsive\",value:function(){if(!this.responsive&&this.mainContent)throw new Error(\"You provide a [\".concat(d,\"] element without set {responsive: true}\"));if(this.responsive&&!this.mainContent)throw new Error(\"You have set {responsive: true} without provide a [\".concat(d,\"] element\"));this.addComponentClass(\"sidebarjs--responsive\")}},{key:\"applyStyle\",value:function(t,e,n,o){if(this.isStyleMapSupported)t.attributeStyleMap.set(e,n);else if(t.style[e]=n,o){var i=\"webkit\"+e.charAt(0).toUpperCase()+e.slice(1);t.style[i]=n}}},{key:\"clearStyle\",value:function(t){this.isStyleMapSupported?t.attributeStyleMap.clear():t.removeAttribute(\"style\")}},{key:\"addComponentClass\",value:function(t){this.component.classList.add(t)}},{key:\"removeComponentClass\",value:function(t){this.component.classList.remove(t)}},{key:\"toggleComponentClass\",value:function(t,e){this.component.classList.toggle(t,e)}}]),t}(),C=function(){function t(){i(this,t),this.instances={}}return s(t,[{key:\"fallbackName\",value:function(t){return t||\"\"}},{key:\"getInstance\",value:function(t){return this.instances[this.fallbackName(t)]}},{key:\"create\",value:function(t){var e,n=this.fallbackName(null==t||null===(e=t.component)||void 0===e?void 0:e.getAttribute(l));return this.instances[n]=new w(t),this.instances[n]}},{key:\"open\",value:function(t){var e;null===(e=this.getInstance(t))||void 0===e||e.open()}},{key:\"close\",value:function(t){var e;null===(e=this.getInstance(t))||void 0===e||e.close()}},{key:\"toggle\",value:function(t){var e;null===(e=this.getInstance(t))||void 0===e||e.toggle()}},{key:\"isVisible\",value:function(t){var e;return!(null===(e=this.getInstance(t))||void 0===e||!e.isVisible())}},{key:\"setPosition\",value:function(t,e){var n;null===(n=this.getInstance(e))||void 0===n||n.setPosition(t)}},{key:\"elemHasListener\",value:function(t,e){return k(t,e)}},{key:\"destroy\",value:function(t){var e=this.fallbackName(t);this.instances[e]&&(this.instances[e].destroy(),this.instances[e]=null,delete this.instances[e])}}]),t}();t.SidebarElement=w,t.SidebarService=C,Object.defineProperty(t,\"__esModule\",{value:!0})});","name":"scripts.d1dbb53c200c53c90297.js","input":"// Capturing XY positions for tooltips\nlet xLocation;\nlet yLocation;\n\n// loader while map layers are rendering\nlet loader;\n\n// Variables for the data classification\nlet interval0;\nlet interval1;\nlet interval2;\nlet interval3;\nlet interval4;\nlet interval5;\nlet interval6;\n\n// Selected dataset array\nlet dataArray;\n\n// Basemap data either 'buurt' or 'stadsdeel' *default is buurt\nlet baseStatus = 'buurt';\n\n// Default base attribute on basemap data\nconst basedataDefault = 'm_exercise';\n\n// Selected attribute in the basemap data\nlet selectedAttribute; //'healthy','m_drinker', 'smoker', 'overweight', 'illness', 'physical_p', 'depression', or 'loneliness'\n\n// Basemap JSON data\nlet baseJson;\n\n// Map initialization status\nlet mapInitialize; //If map was rendered for the first time (true/false)\n\n// Object in vizmap function contains all functions of rendering map layers\nlet mapLayers;\n\n// Variables to store geojson data\n// let geojson_bb; //basemap buurt\n// let geojson_bs; //basemap stadsdeel\n// let geojson_sf; //overlay sports facilities\n// let geojson_mf; //overlay medical facilities\n// let geojson_cc; //overlay community centers\n// let geojson_ss; //overlay sports shops\n// let geojson_gs; //overlay groceries\n// let geojson_ff; //overlay fast food\n// let geojson_br; //overlay bike routes\n// let geojson_pp; //overlay bike routes\n// let geojson_ga; //overlay pp\n// let geojson_aq;\n// let geojson_cm;\n// let geojson_ol; //Eindhoven outline\n\n\n// SVG map layers\nlet basebuurt_svg;\nlet basestadsdeel_svg;\nlet bennekel_svg;\n\nlet buurt_each;\n\n//function to change attribute, color filling and legend on the base maps\nlet changeAttr;\n\n//function to change between buurten and stadsdelen\nlet changeBasemap;\n\n//function to add overlay maps\nlet addOverlay;\n\n//bindData functions for basemap buurt and stadsdeel;\nlet bindDataBB;\nlet bindDataBS;\n\n// Tooltip DOM (Basemap)\nlet tooltipContainerBM;\nlet tooltipPlace;\nlet tooltipValue;\n\n// Tooltip DOM (Overlay)\nlet tooltipContainerOL;\nlet tooltipType;\nlet tooltipName;\nlet tooltipMoreData;\n\n// Tooltip DOM (airquality)\nlet tooltipContainerAQ;\nlet tooltipPM1;\nlet tooltipPM25;\nlet tooltipPM10;\n\n// Tooltip DOM (public concerns)\nlet tooltipContainerPC;\nlet tooltipConcernsTopic;\nlet tooltipConcernsTime;\n\n// Tooltip DOM (traffic)\nlet tooltipContainerTR;\nlet tooltipSpeedLimit;\n\n// Tooltip DOM (Benekel)\nlet tooltipContainerBK;\n\n//Sidebar\nlet sidebarjs;\nlet sideContent;\nlet clickedPathActive;\nclickedPathActive = false;\n\n//Demographic data DOM\nlet selectedNeighbor;\nlet totalpop;\nlet men;\nlet women;\nlet age0_14;\nlet age15_64;\nlet age65;\nlet dutch;\nlet immigrants;\nlet single;\nlet wKids;\nlet income;\n\nlet foot;\nlet bike;\nlet auto;\nlet transit;\n\n// Move DOM(each neighborhood) position when clicked\nlet gElem;\nlet clickedPath;\nlet copiedPath;\n\n// For coloring info icon next to the basemap attribute selection\nlet basemapAttr;\nlet basemapInfo;\n\n//Benekel information modal\nlet pageHinder;\nlet benekelModal;\nlet benekelModalClose;\n\n//After all DOM is loaded\nwindow.onload = function(){\n\n  //Assign DOMs to each variable\n  tooltipContainerBM = document.getElementById('basemap-tooltip');\n  tooltipPlace = document.getElementById('basemap-tooltip-place');\n  tooltipValue = document.getElementById('basemap-tooltip-value');\n\n  tooltipContainerOL = document.getElementById('overlay-tooltip');\n  tooltipType = document.getElementById('overlay-tooltip-type');\n  tooltipName = document.getElementById('overlay-tooltip-name');\n\n  tooltipContainerAQ = document.getElementById('airquality-tooltip');\n  tooltipPM1 = document.getElementById('airquality-tooltip-pm1');\n  tooltipPM25 = document.getElementById('airquality-tooltip-pm25');\n  tooltipPM10 = document.getElementById('airquality-tooltip-pm10');\n\n  tooltipMoreData = document.getElementById('basemap-tooltip-moreData');\n\n  tooltipContainerPC = document.getElementById('publicconcerns-tooltip');\n  tooltipConcernsTopic = document.getElementById('overlay-tooltip-topic');\n  tooltipConcernsTime = document.getElementById('overlay-tooltip-time');\n\n  tooltipContainerTR = document.getElementById('traffic-tooltip');\n  tooltipSpeedLimit = document.getElementById('overlay-tooltip-speedlimit');\n\n  tooltipContainerBK = document.getElementById('bennekel-tooltip');\n\n  // mouse x y position\n  document.addEventListener('mousemove', (e) => {\n    //e = e || window.event;\n    xLocation = e.clientX;\n    yLocation = e.clientY;\n    // console.log(xLocation);\n    // console.log(yLocation);\n\n    tooltipContainerBM.style.left = xLocation + \"px\";\n    tooltipContainerBM.style.top = yLocation + \"px\";\n\n    tooltipContainerOL.style.left = xLocation + \"px\";\n    tooltipContainerOL.style.top = yLocation + \"px\";\n\n    tooltipContainerAQ.style.left = xLocation + \"px\";\n    tooltipContainerAQ.style.top = yLocation + \"px\";\n\n    tooltipContainerPC.style.left = xLocation + \"px\";\n    tooltipContainerPC.style.top = yLocation + \"px\";\n\n    tooltipContainerBK.style.left = xLocation + \"px\";\n    tooltipContainerBK.style.top = yLocation + \"px\";\n\n  });\n\n  // Create sidebarjs instance\n  sidebarjs = new SidebarJS.SidebarElement({\n    backdropOpacity: 0\n    //nativeSwipe: false,\n  });\n\n  const sliderClose = document.getElementById('slider-close');\n  sliderClose.addEventListener('click', (e)=> {\n    sidebarjs.close();\n    if (clickedPathActive == true) {\n      clickedPath[0].classList.remove('clickedNeighbor');\n      clickedPathActive = false;\n    }\n    clickedPath = undefined;\n  })\n\n  sideContent = document.getElementById('sideContent');\n  //console.log(sideContent);\n\n  sideContent.setAttribute('aria-hidden', 'false');\n\n  selectedNeighbor = document.getElementById('selected-neighbor');\n  totalpop = document.getElementById('demography-totalpop');\n  men = document.getElementById('demography-men');\n  women = document.getElementById('demography-women');\n  age0_14 = document.getElementById('demography-age0-14');\n  age15_64 = document.getElementById('demography-age15-64');\n  age65 = document.getElementById('demography-age65');\n  dutch = document.getElementById('demography-dutch');\n  immigrants = document.getElementById('demography-immigrants');\n  single = document.getElementById('demography-single');\n  wKids = document.getElementById('demography-wKids');\n  income = document.getElementById('demography-income');\n\n  foot = document.getElementById('demography-foot');\n  bike = document.getElementById('demography-bike');\n  auto = document.getElementById('demography-auto');\n  transit = document.getElementById('demography-transit');\n\n  gElem = basebuurt_svg.firstChild;\n  // console.log(gElem);\n\n  //Benekel modal\n  pageHinder = document.getElementById('page-hinder');\n  benekelModal = document.getElementById('Bennekel-modal');\n  benekelModalClose = document.getElementById('Bennekel-modal-close');\n\n  benekelModalClose.addEventListener('click', () => {\n    benekelModal.setAttribute(\"aria-hidden\", \"true\");\n    setTimeout(()=>{\n      pageHinder.setAttribute(\"aria-hidden\", \"true\");\n     }, 500);\n  });\n\n  //Coloring info icon for basemap attribute\n  basemapAttr = document.getElementById('basemap-attr');\n  basemapInfo = document.getElementById('basemap-info');\n\n  const observer = new MutationObserver(records => {\n  if (!basemapAttr.classList.contains('mat-focused')) {\n    basemapInfo.classList.remove('active');\n  }\n  })\n  observer.observe(basemapAttr, {\n    attributes: true,\n    attributeFilter: ['class']\n  })\n\n}\n\n// Common directory for json files\nconst dataPath = '/assets/data/';\n\n// Paths for each json files\n\n//Area\nconst basebuurt_path = dataPath + 'edh_buurt_base.json';\nconst basestadsdeel_path = dataPath + 'edh_stadsdeel_base.json';\nconst outline_path = dataPath + 'edh_outline.json';\nconst bennekel_path = dataPath + 'bennekel.json';\nconst bennekeldata_path = dataPath + 'bennekeldata.json';\n\n//Line\nconst traffic_path = dataPath + 'traffic.json';\nconst bikeroutes_path = dataPath + 'bike_routes.json';\nconst runningroutes_path = dataPath + 'running_routes.json';\n\n//Point\nconst sportsfacilities_path = dataPath + 'sports_facilities.json';\nconst medicalfacilities_path = dataPath + 'medical_facilities.json';\nconst communitycenters_path = dataPath + 'community_centers.json';\nconst sportsshops_path = dataPath + 'sports_shops.json';\nconst grocerystores_path = dataPath + 'grocery_stores.json';\nconst fastfoods_path = dataPath + 'fast_food.json';\n\nconst parksplaygrounds_path = dataPath + 'parks_playgrounds.json';\nconst greenarea_path = dataPath + 'green_area.json';\nconst airquality_path = dataPath + 'airquality_edh.json';\n\nconst publicconcerns_path = dataPath + 'public_concerns.json';\n// demography data for each nieghborhood\nconst demography_path = dataPath + 'edh_demography.json';\n\n//Fetch base buurten data\nconst apiReq_buurt = fetch(basebuurt_path).then((response)=> {\n  return response.json();\n});\n\n//Fetch base stadsdelen data\nconst apiReq_stadsdeel = fetch(basestadsdeel_path).then((response)=> {\n  return response.json();\n});\n\n//Fetch outline data\nconst apiReq_outline = fetch(outline_path).then((response)=> {\n  return response.json();\n});\n\n//Fetch bennekel data\nconst apiReq_bennekel = fetch(bennekel_path).then((response)=> {\n  return response.json();\n});\n\nconst apiReq_bennekeldata = fetch(bennekeldata_path).then((response)=> {\n  return response.json();\n});\n\n//Fetch traffic data\nconst apiReq_traffic = fetch(traffic_path).then((response)=> {\n  return response.json();\n});\n\n//Fetch bike routes data\nconst apiReq_bikeroutes = fetch(bikeroutes_path).then((response)=> {\n  return response.json();\n});\n\n//Fetch running routes data\nconst apiReq_runningroutes = fetch(runningroutes_path).then((response)=> {\n  return response.json();\n});\n\n//Fetch sports facilities data\nconst apiReq_sportsfacilities = fetch(sportsfacilities_path).then((response)=> {\n  return response.json();\n});\n\n//Fetch medical facilities data\nconst apiReq_medicalfacilities = fetch(medicalfacilities_path).then((response)=> {\n  return response.json();\n});\n\n//Fetch community centers data\nconst apiReq_communitycenters = fetch(communitycenters_path).then((response)=> {\n  return response.json();\n});\n\n//Fetch sports shops data\nconst apiReq_sportsshops = fetch(sportsshops_path).then((response)=> {\n  return response.json();\n});\n\n//Fetch groceries data\nconst apiReq_grocerystores = fetch(grocerystores_path).then((response)=> {\n  return response.json();\n});\n\n//Fetch fast food data\nconst apiReq_fastfoods = fetch(fastfoods_path).then((response)=> {\n  return response.json();\n});\n\n//Fetch parks and playgrounds data\nconst apiReq_parksplaygrounds = fetch(parksplaygrounds_path).then((response)=> {\n  return response.json();\n});\n\n//Fetch green area data\nconst apiReq_greenarea = fetch(greenarea_path).then((response)=> {\n  return response.json();\n});\n\n//Fetch demography data\nconst apiReq_demography = fetch(demography_path).then((response)=> {\n  return response.json();\n});\n\n//Fetch airquality data\nconst apiReq_airquality = fetch(airquality_path).then((response)=> {\n  return response.json();\n});\n\n//Fetch comment data\nconst apiReq_publicconcerns = fetch(publicconcerns_path).then((response)=> {\n  return response.json();\n});\n\n//Common function (promise) to read selected basemap data value in advance\n\n// Promise (Step1): array creation of buurt data\nconst pushArray = (attribute, whichbase)=> {\n  return new Promise((resolve, reject) => {\n    // baseStatus = whichbase;\n    // console.log('selected basemap is ' + baseStatus);\n    // console.log('called basemap is ' + whichbase);\n    selectedAttribute = whichbase;\n    // console.log(selectedAttribute);\n    if (selectedAttribute == 'buurt') {\n      //console.log('go for buurt');\n      apiReq_buurt.then((data)=> {\n        baseJson = data;\n        dataArray = []; //Clear dataArray\n        checkAttribute();\n      });\n    } else if (selectedAttribute == 'stadsdeel') {\n      //console.log('go for stadsdeel');\n      apiReq_stadsdeel.then((data)=> {\n        baseJson = data;\n        dataArray = []; //Clear dataArray\n        checkAttribute();\n      });\n    }\n\n    //In case the dataArray is excuted before geeting attribute value\n    function checkAttribute() {\n      //console.log('checking attribute...');\n      //console.log(attribute);\n      if(attribute != 'undefined') {\n        //console.log('move forward');\n        selectedAttribute = attribute;\n        //console.log(selectedAttribute);\n        createArray();\n      } else {\n        window.setTimeout(checkAttribute, 500); /* repeat (wait) until data is loaded */\n      }\n    }\n\n    function createArray() {\n      //console.log('creating array...');\n      let dataLength = baseJson.features.length;\n      for (let i = 0; i < dataLength; i++) {\n        dataArray.push(baseJson.features[i].properties[selectedAttribute]);\n      }\n      //console.log(dataArray);\n    }\n    resolve();\n  })\n}\n\n// Promise (Step2): Calculation of values for map color fill and legend\nconst legendCalc = (p) => {\n  return new Promise((resolve, reject) => {\n    // console.log(\"legend calc\");\n    let filteredLegend = dataArray.filter(function (rm) {\n      return rm != null;\n    });\n\n    const aryMax = function (a, b) {return Math.max(a, b);}\n    const aryMin = function (a, b) {return Math.min(a, b);}\n    let max = filteredLegend.reduce(aryMax); // => 10\n    let min = filteredLegend.reduce(aryMin); // => 1\n\n    // console.log(max);\n    // console.log(min);\n\n    let division = Math.round((max - min)/4);\n    //console.log(division);\n\n    interval0 = min;\n    interval1 = (min + division) - 1;\n    interval2 = min + division;\n    interval3 = (min + division*2) - 1;\n    interval4 = min + division*2;\n    interval5 = (min + division*3) - 1;\n    interval6 = min + division*3;\n\n    // console.log(interval0);\n    // console.log(interval1);\n    // console.log(interval2);\n    // console.log(interval3);\n    // console.log(interval4);\n    // console.log(interval5);\n    // console.log(interval6);\n\n    resolve();\n  })\n};\n\n// Promise (Step3): filling colors on the map are different with buurt and stadsdeel basemap and written inside of the d3 code\n\n// Promise (Step4): create legend\nconst createLegend = (p) => {\n  return new Promise((resolve, reject) => {\n\n    let legend4a = document.getElementById('legend4a-txt');\n    let legend3a = document.getElementById('legend3a-txt');\n    let legend3b = document.getElementById('legend3b-txt');\n    let legend2a = document.getElementById('legend2a-txt');\n    let legend2b = document.getElementById('legend2b-txt');\n    let legend1a = document.getElementById('legend1a-txt');\n    let legend1b = document.getElementById('legend1b-txt');\n\n    let legendTitle = document.getElementById('legendTitle');\n\n    legend4a.innerText = interval6;\n    legend3a.innerText = interval4;\n    legend3b.innerText = interval5;\n    legend2a.innerText = interval2;\n    legend2b.innerText = interval3;\n    legend1a.innerText = interval0;\n    legend1b.innerText = interval1;\n\n    if (selectedAttribute == 'm_exercise') {\n      legendTitle.innerText = 'Moderate Exercise';\n    } else if (selectedAttribute == 'healthy') {\n      legendTitle.innerText = 'Healthy';\n    } else if (selectedAttribute == 'm_drinker') {\n      legendTitle.innerText = 'Drinker';\n    } else if (selectedAttribute == 'smoker') {\n      legendTitle.innerText = 'Smorker';\n    } else if (selectedAttribute == 'overweight') {\n      legendTitle.innerText = 'Overweight';\n    } else if (selectedAttribute == 'illness') {\n      legendTitle.innerText = 'Illness';\n    } else if (selectedAttribute == 'physical_p') {\n      legendTitle.innerText = 'Physical Unavailability';\n    } else if (selectedAttribute == 'depression') {\n      legendTitle.innerText = 'Depression';\n    } else if (selectedAttribute == 'loneliness') {\n      legendTitle.innerText = 'Loneliness';\n    }\n\n    resolve(p);\n  })\n};\n\n// PromiseError handling\nconst onRejectted = (p)=>{\n  console.log(\"Promise Error\",p);\n}\n\n\n// Map visualization function\nconst vizmaps = ()=> {\n\n  let map = new L.Map('map-container', {scrollWheelZoom: false}).setView([51.45, 5.450], 12); //*Leaflet uses lat long / original set:[51.4400, 5.4750]\n\n  // Set basemap layers with ESRI Leaflet\n  const basegray = L.esri.basemapLayer('Gray');\n  const basestreet = L.esri.basemapLayer('Streets');\n  const baseimagery = L.esri.basemapLayer('Imagery');\n\n  // Basemap layers\n  const baseLayers = {\n    'Gray': basegray,\n    'Street': basestreet,\n    'Satellite': baseimagery\n  }\n\n  L.esri.basemapLayer('Gray').addTo(map); //default basemap\n  L.control.layers(baseLayers).addTo(map); //basemap options\n\n  mapLayers = {\n\n    // Basemap Neighborhoods\n    basemap_buurt: function basemap_buurt() {\n\n      let projectPoint = function projectPoint(x, y) {\n\t\t\t\tlet point = map.latLngToLayerPoint(new L.LatLng(y,x)); // *Check lat lon, lon lat\n\t\t    \tthis.stream.point(point.x, point.y);\n\t\t\t};\n\n\t\t\t// Transform positions\n\t\t\tlet transform = d3.geoTransform({point: projectPoint}),\n\t\t\t\tpath = d3.geoPath().projection(transform);\n\n\t\t\tlet svg_bb = d3.select(map.getPanes().overlayPane).append('svg').attr('id', 'basemap-buurt');\n\t\t  let g_bb = svg_bb.append('g').attr('class', 'leaflet-zoom-hide');\n\n      basebuurt_svg = document.getElementById('basemap-buurt');\n\n      d3.json(basebuurt_path).then(function(geojson) {\n        let geojson_bb = geojson;\n        let feature_bb = g_bb.selectAll('path')\n                              .data(geojson_bb.features)\n                              .enter()\n                              .append('path');\n\n        map.on('moveend', reset);\n        reset();\n\n        // Reposition the SVG to cover the features.\n        function reset() {\n          let bounds = path.bounds(geojson_bb),\n            topLeft = bounds[0],\n            bottomRight = bounds[1];\n\n            svg_bb.attr('width', bottomRight[0] - topLeft[0])\n                  .attr('height', bottomRight[1] - topLeft[1])\n                  .style('left', topLeft[0] + 'px')\n                  .style('top', topLeft[1] + 'px');\n\n            g_bb.attr('transform', 'translate(' + -topLeft[0] + ',' + -topLeft[1] + ')');\n\n            // Promise (Step3): Fill colors on the map\n          const fillColorsBB = (p) => {\n            return new Promise((resolve, reject) => {\n\n              feature_bb.attr('d', path)\n                .style('stroke', 'rgb(187,187,187)') //#bbbbbb\n                .style('stroke-width', '1px')\n                .attr('class', 'leaflet-interactive')// Release leaflet's css pointer-event:none\n                .style('cursor', 'pointer')\n                .style('fill', (d)=> {\n                  if (d.properties[selectedAttribute] >= interval6) {\n                      return 'rgb(204,76,2)';\n                  } else if (d.properties[selectedAttribute] >= interval4 & d.properties[selectedAttribute] < interval6) {\n                      return 'rgb(254,153,41)';\n                  } else if (d.properties[selectedAttribute] >= interval2 & d.properties[selectedAttribute] < interval4) {\n                      return 'rgb(254,217,142)';\n                  } else if (d.properties[selectedAttribute] >= interval0 & d.properties[selectedAttribute] < interval2) {\n                      return 'rgb(255,255,212)';\n                  } else {\n                    return 'rgb(212,212,212)'; //#d4d4d4;\n                  }\n                })\n                .style('opacity', '0')\n                .transition()\n                .duration(500)\n                .style('opacity', '0.7');\n\n                feature_bb.attr('d', path).on(\"mouseover\", handleMouseOver)\n                  .on(\"mouseout\", handleMouseOut)\n                  .on(\"click\", handleMouseClick);\n\n                resolve(p);\n            })\n          };\n\n          bindDataBB = function(attr, whichbase) {\n            // console.log(attr);\n            // console.log(whichbase);\n            Promise.resolve()\n            .then(pushArray.bind(this, attr, whichbase))\n            //depression, disease, h_drinker, healthy, illness, lonliness, m_drinker, m_exercise, neighbor, overweight, physical_p, smoker, : 61\n            .then(legendCalc)\n            .then(fillColorsBB)\n            .then(createLegend)\n            .catch(onRejectted);\n          }\n\n          //console.log(mapInitialize);\n          //if (mapInitialize == true) {\n          bindDataBB(basedataDefault, 'buurt');\n          //}\n\n          function handleMouseOver(d, i) {\n            console.log('mouseover');\n            // console.log(d);\n            // console.log(i);\n            tooltipMoreData.setAttribute('aria-hidden','false');\n\n            d3.select(this)\n              .transition()\n              //.style('stroke', 'rgb(0,0,0)')\n              .style('opacity', 1)\n              .duration(200);\n\n              // tooltipContainerBM.style.left = xLocation + \"px\";\n              // tooltipContainerBM.style.top = yLocation + \"px\";\n              tooltipPlace.innerText = i.properties.neighbor;\n              tooltipContainerBM.setAttribute('aria-hidden','false');\n\n              if (i.properties[selectedAttribute] !== null) {\n                tooltipValue.innerText = i.properties[selectedAttribute] + ' %';\n              } else {\n                tooltipValue.innerText = 'No Data';\n              }\n          } //handleMouseOver\n\n          function handleMouseOut (d, i) {\n            tooltipContainerBM.setAttribute('aria-hidden','true');\n            tooltipMoreData.setAttribute('aria-hidden','true');\n            d3.select(this)\n              .transition()\n              .style('opacity', 0.7)\n              //.style('stroke', 'rgb(187,187,187)')\n              .duration(200);\n          }\n\n          function handleMouseClick (d, i) {\n\n            function sendGA (){\n              console.log('ga log sent');\n              gtag('event', 'click', {\n                'event_category': i.properties.neighbor + '_clicked',\n                'event_label': 'Neighborhoods',\n                //'event_status': 'checkbox_' + checkStatus,\n                'value': 0 })\n            };\n            sendGA ();\n            //console.log('clicked');\n            //console.log(i.properties.neighbor);\n            //console.log(d);\n            let clickedNeighbor = i.properties.neighbor;\n\n            //console.log(clickedPath);\n            if (clickedPath == undefined && clickedPathActive == false) {\n              d3.select(this).classed('clickedNeighbor',true);\n              clickedPath = document.getElementsByClassName('clickedNeighbor');\n              //console.log(clickedPath[0]);\n              gElem.appendChild(clickedPath[0]);\n              clickedPathActive = true;\n            } else if (clickedPath != undefined && clickedPathActive == true){\n              clickedPath[0].classList.remove('clickedNeighbor');\n              //console.log(gElem.lastChild);\n              d3.select(this).classed('clickedNeighbor',true);\n              clickedPath = document.getElementsByClassName('clickedNeighbor');\n              //console.log(clickedPath[0]);\n              gElem.appendChild(clickedPath[0]);\n            } else if (clickedPath != undefined && clickedPathActive == false) {\n              //clickedPath[0].classList.remove('clickedNeighbor');\n              //console.log(gElem.lastChild);\n              d3.select(this).classed('clickedNeighbor',true);\n              clickedPath = document.getElementsByClassName('clickedNeighbor');\n              //console.log(clickedPath[0]);\n              gElem.appendChild(clickedPath[0]);\n              clickedPathActive = true;\n            }\n\n            apiReq_demography.then((data)=> {\n              let demoData = data;\n              let selectedDemoData;\n              let demoDataLength = data.length;\n              // console.log(demoDataLength);\n              // console.log(demoData);\n              for (let i = 0; i < demoDataLength; i++) {\n                if (demoData[i].Buurten == clickedNeighbor) {\n                  selectedDemoData = demoData[i];\n                  // console.log(selectedDemoData);\n\n                  selectedNeighbor.innerText = selectedDemoData.Buurten;\n\n                  if (selectedDemoData.total_population !=\"\") {\n                    totalpop.innerText = \"- \" + selectedDemoData.total_population;\n                  } else {\n                    totalpop.innerText = \"- \" + \"No data\"\n                  };\n\n                  if (selectedDemoData.men_2020 !=\"\") {\n                    men.innerText = \"- \" + selectedDemoData.men_2020 + \" %\";\n                  } else {\n                    men.innerText = \"- \" + \"No data\"\n                  };\n\n                  if (selectedDemoData.women_2020 !=\"\") {\n                    women.innerText = \"- \" + selectedDemoData.women_2020 + \" %\";\n                  } else {\n                    women.innerText = \"- \" + \"No data\"\n                  };\n\n                  if (selectedDemoData['0-14_2020'] !=\"\") {\n                    age0_14.innerText = \"- \" + selectedDemoData['0-14_2020'] + \" %\";\n                  } else {\n                    age0_14.innerText = \"- \" + \"No data\"\n                  };\n\n                  if (selectedDemoData['15-64_2020'] !=\"\") {\n                    age15_64.innerText = \"- \" + selectedDemoData['15-64_2020'] + \" %\";\n                  } else {\n                    age15_64.innerText = \"- \" + \"No data\"\n                  };\n\n                  if (selectedDemoData['65andAbove_2020'] !=\"\") {\n                    age65.innerText = \"- \" + selectedDemoData['65andAbove_2020'] + \" %\";\n                  } else {\n                    age65.innerText = \"- \" + \"No data\"\n                  };\n\n                  if (selectedDemoData.Dutch_2020 !=\"\") {\n                    dutch.innerText = \"- \" + selectedDemoData.Dutch_2020 + \" %\";\n                  } else {\n                    dutch.innerText = \"- \" + \"No data\"\n                  };\n\n                  if (selectedDemoData.immigrants_2020 !=\"\") {\n                    immigrants.innerText = \"- \" + selectedDemoData.immigrants_2020 + \" %\";\n                  } else {\n                    immigrants.innerText = \"- \" + \"No data\"\n                  };\n\n                  if (selectedDemoData.single_2019 !=\"\") {\n                    single.innerText = \"- \" + selectedDemoData.single_2019 + \" %\";\n                  } else {\n                    single.innerText = \"- \" + \"No data\"\n                  };\n\n                  if (selectedDemoData.w_kids_2019 !=\"\") {\n                    wKids.innerText = \"- \" + selectedDemoData.w_kids_2019 + \" %\";\n                  } else {\n                    wKids.innerText = \"- \" + \"No data\"\n                  };\n\n                  if (selectedDemoData.avg_income_person_2019 !=\"\") {\n                    income.innerText = \"- \" + selectedDemoData.avg_income_person_2019 + \" EUR\";\n                  } else {\n                    income.innerText = \"- \" + \"No data\"\n                  };\n\n                  if (selectedDemoData.foot_2019 !=\"\") {\n                    foot.innerText = \"- \" + selectedDemoData.foot_2019 + \" %\";\n                  } else {\n                    foot.innerText = \"- \" + \"No data\"\n                  };\n\n                  if (selectedDemoData.fiets_2019 !=\"\") {\n                    bike.innerText = \"- \" + selectedDemoData.fiets_2019 + \" %\";\n                  } else {\n                    bike.innerText = \"- \" + \"No data\"\n                  };\n\n                  if (selectedDemoData.auto_2019 !=\"\") {\n                    auto.innerText = \"- \" + selectedDemoData.auto_2019 + \" %\";\n                  } else {\n                    auto.innerText = \"- \" + \"No data\"\n                  };\n\n                  if (selectedDemoData.transit_2019 !=\"\") {\n                    transit.innerText = \"- \" + selectedDemoData.transit_2019 + \" %\";\n                  } else {\n                    transit.innerText = \"- \" + \"No data\"\n                  };\n\n                  break;\n                };\n              }\n            });\n\n            sidebarjs.open();\n          }\n\n          //remove loader\n          loader = document.getElementById('loader-bg');\n          loader.setAttribute('aria-hidden','true');\n\n        }// reset\n      })//d3.json\n    },//bb\n\n    // Basemap Districts\n    basemap_stadsdeel: function basemap_stadsdeel() {\n\n      let projectPoint = function projectPoint(x, y) {\n\t\t\t\tlet point = map.latLngToLayerPoint(new L.LatLng(y,x)); // *Check lat lon, lon lat\n\t\t    \tthis.stream.point(point.x, point.y);\n\t\t\t};\n\n\t\t\t// Transform positions\n\t\t\tlet transform = d3.geoTransform({point: projectPoint}),\n\t\t\t\tpath = d3.geoPath().projection(transform);\n\n\t\t\tlet svg_bs = d3.select(map.getPanes().overlayPane).append('svg').attr('id', 'basemap-stadsdeel');\n\t\t  let g_bs = svg_bs.append('g').attr('class', 'leaflet-zoom-hide');\n\n      basestadsdeel_svg = document.getElementById('basemap-stadsdeel');\n\n      if (mapInitialize == true) {\n        basestadsdeel_svg.setAttribute('aria-hidden', 'true');\n      }\n\n      d3.json(basestadsdeel_path).then(function(geojson) {\n        geojson_bs = geojson;\n        let feature_bs = g_bs.selectAll('path')\n                              .data(geojson_bs.features)\n                              .enter()\n                              .append('path');\n\n        map.on('moveend', reset);\n        reset();\n\n        // Reposition the SVG to cover the features.\n        function reset() {\n          let bounds = path.bounds(geojson_bs),\n            topLeft = bounds[0],\n            bottomRight = bounds[1];\n\n            svg_bs.attr('width', bottomRight[0] - topLeft[0])\n                  .attr('height', bottomRight[1] - topLeft[1])\n                  .style('left', topLeft[0] + 'px')\n                  .style('top', topLeft[1] + 'px');\n\n            g_bs.attr('transform', 'translate(' + -topLeft[0] + ',' + -topLeft[1] + ')');\n\n            const fillColorsBS = (p) => {\n              return new Promise((resolve, reject) => {\n\n                feature_bs.attr('d', path)\n                  .style('stroke', 'rgb(187,187,187)') //#bbbbbb\n                  .style('stroke-width', '1px')\n                  .attr('class', 'leaflet-interactive') // Release leaflet's css pointer-event:none\n                  .style('cursor', 'pointer')\n                  .style('fill', (d)=> {\n                    if (d.properties[selectedAttribute] >= interval6) {\n                        return 'rgb(204,76,2)';\n                    } else if (d.properties[selectedAttribute] >= interval4 & d.properties[selectedAttribute] < interval6) {\n                        return 'rgb(254,153,41)';\n                    } else if (d.properties[selectedAttribute] >= interval2 & d.properties[selectedAttribute] < interval4) {\n                        return 'rgb(254,217,142)';\n                    } else if (d.properties[selectedAttribute] >= interval0 & d.properties[selectedAttribute] < interval2) {\n                        return 'rgb(255,255,212)';\n                    } else {\n                      return 'rgb(212,212,212)'; //#d4d4d4;\n                    }\n                  })\n                  .style('opacity', '0')\n                  .transition()\n                  .duration(500)\n                  .style('opacity', '0.7');\n\n                  feature_bs.attr('d', path).on(\"mouseover\", handleMouseOver)\n                    .on(\"mouseout\", handleMouseOut);\n\n                  resolve(p);\n                })\n            };\n\n            bindDataBS = function (attr, whichbase) {\n              // console.log(attr);\n              // console.log(whichbase);\n              Promise.resolve()\n              .then(pushArray.bind(this, attr, whichbase))\n              //depression, disease, h_drinker, healthy, illness, lonliness, m_drinker, m_exercise, neighbor, overweight, physical_p, smoker, : 61\n              .then(legendCalc)\n              .then(fillColorsBS)\n              .then(createLegend)\n              .catch(onRejectted);\n            }\n\n          // if (mapInitialize == false) {\n          //   bindDataBS(basedataDefault, 'stadsdeel');\n          // }\n\n          function handleMouseOver(d, i) {\n            // console.log('mouseover');\n            // console.log(d);\n            // console.log(i);\n\n            d3.select(this)\n              .transition()\n              .style('opacity', 1)\n              .style('stroke', 'rgb(0,0,0)')\n              .duration(200);\n\n              // tooltipContainerBM.style.left = xLocation + \"px\";\n              // tooltipContainerBM.style.top = yLocation + \"px\";\n              tooltipPlace.innerText = i.properties.districts;\n              tooltipContainerBM.setAttribute('aria-hidden','false');\n\n\n              if (i.properties[selectedAttribute] != null) {\n                tooltipValue.innerText = i.properties[selectedAttribute] + ' %';\n              } else {\n                tooltipValue.innerText = 'No Data';\n              }\n          } //handleMouseOver\n\n          function handleMouseOut (d, i) {\n            tooltipContainerBM.setAttribute('aria-hidden','true');\n\n            d3.select(this)\n              .transition()\n              .style('opacity', 0.7)\n              .style('stroke', 'rgb(187,187,187)')\n              .duration(200);\n          }\n\n          //remove loader\n          loader = document.getElementById('loader-bg');\n          loader.setAttribute('aria-hidden','true');\n\n        }// reset\n      })\n    }, //bs\n\n    // Basemap Outline\n    basemap_outline: function basemap_outline() {\n\n      let projectPoint = function projectPoint(x, y) {\n\t\t\t\tlet point = map.latLngToLayerPoint(new L.LatLng(y,x)); // *Check lat lon, lon lat\n\t\t    \tthis.stream.point(point.x, point.y);\n\t\t\t};\n\n\t\t\t// Transform positions\n\t\t\tlet transform = d3.geoTransform({point: projectPoint}),\n\t\t\t\tpath = d3.geoPath().projection(transform);\n\n\t\t\tlet svg_bo = d3.select(map.getPanes().overlayPane).append('svg').attr('id', 'basemap-outline');\n\t\t  let g_bo = svg_bo.append('g').attr('class', 'leaflet-zoom-hide');\n\n      baseoutline_svg = document.getElementById('basemap-outline');\n\n      // if (mapInitialize == true) {\n      //   basestadsdeel_svg.setAttribute('aria-hidden', 'true');\n      // }\n\n      d3.json(outline_path).then(function(geojson) {\n        geojson_bo = geojson;\n        let feature_bo = g_bo.selectAll('path')\n                              .data(geojson_bo.features)\n                              .enter()\n                              .append('path');\n\n        map.on('moveend', reset);\n        reset();\n\n        // Reposition the SVG to cover the features.\n        function reset() {\n          let bounds = path.bounds(geojson_bs),\n            topLeft = bounds[0],\n            bottomRight = bounds[1];\n\n            svg_bo.attr('width', bottomRight[0] - topLeft[0])\n                  .attr('height', bottomRight[1] - topLeft[1])\n                  .style('left', topLeft[0] + 'px')\n                  .style('top', topLeft[1] + 'px');\n\n            g_bo.attr('transform', 'translate(' + -topLeft[0] + ',' + -topLeft[1] + ')');\n\n\n\n                feature_bo.attr('d', path)\n                  .style('stroke', '#999999') //#bbbbbb\n                  .style('stroke-width', '3px')\n                  .attr('class', 'leaflet-interactive') // Release leaflet's css pointer-event:none\n                  .style('fill', \"none\")\n                  .style('pointer-events', \"none !important\")\n                  .style('opacity', '0.9');\n\n          //remove loader\n          loader = document.getElementById('loader-bg');\n          loader.setAttribute('aria-hidden','true');\n\n        }// reset\n      })\n    }, //bo\n\n    // Overlay Bennekel\n    bennekel: function bennekel() {\n\n      let projectPoint = function projectPoint(x, y) {\n\t\t\t\tlet point = map.latLngToLayerPoint(new L.LatLng(y,x)); // *Check lat lon, lon lat\n\t\t    \tthis.stream.point(point.x, point.y);\n\t\t\t};\n\n\t\t\t// Transform positions\n\t\t\tlet transform = d3.geoTransform({point: projectPoint}),\n\t\t\t\tpath = d3.geoPath().projection(transform);\n\n\t\t\tlet svg_bk = d3.select(map.getPanes().overlayPane).append('svg').attr('id', 'bennekel');\n\t\t  let g_bk = svg_bk.append('g').attr('class', 'leaflet-zoom-hide');\n\n      bennekel_svg = document.getElementById('bennekel');\n\n      if (mapInitialize == true) {\n        bennekel_svg.setAttribute('aria-hidden', 'true');\n      }\n\n      d3.json(bennekel_path).then(function(geojson) {\n        geojson_bk = geojson;\n        let feature_bk = g_bk.selectAll('path')\n                              .data(geojson_bk.features)\n                              .enter()\n                              .append('path');\n\n        map.on('moveend', reset);\n        reset();\n\n        // Reposition the SVG to cover the features.\n        function reset() {\n          let bounds = path.bounds(geojson_bk),\n            topLeft = bounds[0],\n            bottomRight = bounds[1];\n\n            svg_bk.attr('width', bottomRight[0] - topLeft[0])\n                  .attr('height', bottomRight[1] - topLeft[1])\n                  .style('left', topLeft[0] + 'px')\n                  .style('top', topLeft[1] + 'px');\n\n            g_bk.attr('transform', 'translate(' + -topLeft[0] + ',' + -topLeft[1] + ')');\n\n            feature_bk.attr('d', path)\n              .style('stroke', '#666666') //#bbbbbb\n              .style('stroke-width', '2px')\n              .attr('class', 'leaflet-interactive') // Release leaflet's css pointer-event:none\n              .style('cursor', 'pointer')\n              .style('fill', 'rgb(27,50,141)')\n              .style('opacity', '0.7');\n\n              feature_bk.attr('d', path).on(\"mouseover\", handleMouseOver)\n                .on(\"mouseout\", handleMouseOut).on(\"click\", handleMouseClick);\n\n          function handleMouseOver(d, i) {\n            // console.log('mouseover');\n            // console.log(d);\n            // console.log(i);\n\n            d3.select(this)\n              .transition()\n              .style('opacity', 1)\n              .style('stroke', 'rgb(0,0,0)')\n              .duration(200);\n\n              //tooltipContainerBK.style.left = xLocation + \"px\";\n              // tooltipContainerBM.style.top = yLocation + \"px\";\n              // tooltipPlace.innerText = i.properties.districts;\n              tooltipContainerBK.setAttribute('aria-hidden','false');\n\n\n              // if (i.properties[selectedAttribute] != null) {\n              //   tooltipValue.innerText = i.properties[selectedAttribute] + ' %';\n              // } else {\n              //   tooltipValue.innerText = 'No Data';\n              // }\n          } //handleMouseOver\n\n          function handleMouseOut (d, i) {\n            tooltipContainerBK.setAttribute('aria-hidden','true');\n\n            d3.select(this)\n              .transition()\n              .style('opacity', 0.7)\n              .style('stroke', 'rgb(187,187,187)')\n              .duration(200);\n          }\n\n          function handleMouseClick (d,i) {\n            pageHinder.setAttribute(\"aria-hidden\", \"false\");\n            setTimeout(()=>{\n              benekelModal.setAttribute(\"aria-hidden\", \"false\");\n             }, 500);\n\n          }\n\n          //remove loader\n          loader = document.getElementById('loader-bg');\n          loader.setAttribute('aria-hidden','true');\n\n        }// reset\n      })\n    }, //bk\n\n    // Overlay datasets\n\n    // traffic (line)\n    traffic: function traffic() {\n\n      let projectPoint = function projectPoint(x, y) {\n        let point = map.latLngToLayerPoint(new L.LatLng(y,x)); // *Check lat lon, lon lat\n          this.stream.point(point.x, point.y);\n      };\n\n      // Transform positions\n      let transform = d3.geoTransform({point: projectPoint}),\n        path = d3.geoPath().projection(transform);\n\n      let svg_tr = d3.select(map.getPanes().overlayPane).append('svg').attr('id', 'traffic');\n      let g_tr = svg_tr.append('g').attr('class', 'leaflet-zoom-hide');\n\n      //filters go in defs element\n      // let defs = svg_tr.append(\"defs\");\n\n      // let filter = defs.append(\"filter\")\n      //     .attr(\"id\", \"dot-blur\");\n\n      // filter.append(\"feGaussianBlur\")\n      //     .attr(\"in\", \"SourceGraphic\")\n      //     .attr(\"stdDeviation\", 1);\n\n      traffic_svg = document.getElementById('traffic');\n\n      if (mapInitialize == true) {\n        traffic_svg.setAttribute('aria-hidden', 'true');\n      }\n\n      d3.json(traffic_path).then(function(geojson) {\n        geojson_tr = geojson;\n        let feature_tr = g_tr.selectAll('path')\n                              .data(geojson_tr.features)\n                              .enter()\n                              .append('path');\n\n        map.on('moveend', reset);\n        reset();\n\n        // Reposition the SVG to cover the features.\n        function reset() {\n          let bounds = path.bounds(geojson_tr),\n            topLeft = bounds[0],\n            bottomRight = bounds[1];\n\n            svg_tr.attr('width', bottomRight[0] - topLeft[0])\n                  .attr('height', bottomRight[1] - topLeft[1])\n                  .style('left', topLeft[0] + 'px')\n                  .style('top', topLeft[1] + 'px')\n                  .style('overflow', 'visible');\n\n            g_tr.attr('transform', 'translate(' + -topLeft[0] + ',' + -topLeft[1] + ')');\n\n            let zoomLev = map.getZoom();\n\n\t            feature_tr.attr('d', path)\n                   .style('stroke','#222222') //rgb(189,16,40)\n                   .style('opacity', (d)=> {\n                      if (d.properties.max_speed >= 100) {\n                        return '1';\n                      } else if (d.properties.max_speed < 100 & d.properties.max_speed >= 75) {\n                          return '0.75';\n                      } else if (d.properties.max_speed < 75 & d.properties.max_speed >= 50) {\n                          return '0.5';\n                      } else if (d.properties.max_speed < 50 & d.properties.max_speed >= 25) {\n                          return '0.25';\n                      } else if (d.properties.max_speed < 25) {\n                          return '0';\n                      };\n                   })\n                   //.style('opacity', 0.7)\n                   .style('stroke-width', ()=>{\n                   \t\tif (zoomLev <= 11) {\n\t                        return 1;\n\t                    } else if (zoomLev == 12) {\n\t                        return 1.5;\n\t                    } else if (zoomLev == 13) {\n\t                        return 2;\n\t                    } else if (zoomLev == 14) {\n\t                        return 3;\n\t                    } else if (zoomLev == 15) {\n\t                        return 4;\n\t                    } else if (zoomLev == 16) {\n\t                \t\treturn 5;\n\t                    } else {\n\t                    \treturn 2;\n\t                    }\n                   })\n                   .style('fill', 'none')\n                   .style('pointer-events', 'none')\n                   .style('cursor', 'pointer')\n        \t\t       .attr('class', 'pointer-release'); // Release leaflet's css pointer-event:none\n\n                   feature_tr.attr('d', path).on(\"mouseover\", handleMouseOver)\n                    .on(\"mouseout\", handleMouseOut);\n\n\n                  function handleMouseOver(d, i) {\n                  console.log('mouseover tr');\n                  // console.log(d);\n                  // console.log(i);\n\n                  d3.select(this)\n                    .transition()\n                    .style('opacity', 1)\n                    .style('stroke', 'rgb(0,0,0)')\n                    .duration(200);\n\n\n                    //tooltip.innerText = i.properties.districts;\n                    tooltipContainerTR.setAttribute('aria-hidden','false');\n\n\n                    // if (i.properties[selectedAttribute] != null) {\n                    //   tooltipValue.innerText = i.properties[selectedAttribute] + ' %';\n                    // } else {\n                    //   tooltipValue.innerText = 'No Data';\n                    // }\n                } //handleMouseOver\n\n                function handleMouseOut (d, i) {\n                  tooltipContainerTR.setAttribute('aria-hidden','true');\n\n                  d3.select(this)\n                    .transition()\n                    .style('opacity', 0.7)\n                    .style('stroke', 'rgb(187,187,187)')\n                    .duration(200);\n                }\n\n          //remove loader\n          loader = document.getElementById('loader-bg');\n          loader.setAttribute('aria-hidden','true');\n\n        }// reset\n      })\n    }, //tr\n\n    // bike routes (line)\n    bike_routes: function bike_routes() {\n\n      let projectPoint = function projectPoint(x, y) {\n        let point = map.latLngToLayerPoint(new L.LatLng(y,x)); // *Check lat lon, lon lat\n          this.stream.point(point.x, point.y);\n      };\n\n      // Transform positions\n      let transform = d3.geoTransform({point: projectPoint}),\n        path = d3.geoPath().projection(transform);\n\n      let svg_br = d3.select(map.getPanes().overlayPane).append('svg').attr('id', 'bike-routes');\n      let g_br = svg_br.append('g').attr('class', 'leaflet-zoom-hide');\n\n      //filters go in defs element\n      let defs = svg_br.append(\"defs\");\n\n      let filter = defs.append(\"filter\")\n          .attr(\"id\", \"dot-blur\");\n\n      filter.append(\"feGaussianBlur\")\n          .attr(\"in\", \"SourceGraphic\")\n          .attr(\"stdDeviation\", 1);\n\n      bikeroutes_svg = document.getElementById('bike-routes');\n\n      if (mapInitialize == true) {\n        bikeroutes_svg.setAttribute('aria-hidden', 'true');\n      }\n\n      d3.json(bikeroutes_path).then(function(geojson) {\n        geojson_br = geojson;\n        let feature_br = g_br.selectAll('path')\n                              .data(geojson_br.features)\n                              .enter()\n                              .append('path');\n\n        map.on('moveend', reset);\n        reset();\n\n        // Reposition the SVG to cover the features.\n        function reset() {\n          let bounds = path.bounds(geojson_br),\n            topLeft = bounds[0],\n            bottomRight = bounds[1];\n\n            svg_br.attr('width', bottomRight[0] - topLeft[0])\n                  .attr('height', bottomRight[1] - topLeft[1])\n                  .style('left', topLeft[0] + 'px')\n                  .style('top', topLeft[1] + 'px')\n                  .style('overflow', 'visible');\n\n            g_br.attr('transform', 'translate(' + -topLeft[0] + ',' + -topLeft[1] + ')');\n\n            let zoomLev = map.getZoom();\n\n\t            feature_br.attr('d', path)\n                   .style('stroke', 'rgb(170, 139, 21)')\n                   .style('opacity', 0.7)\n                   .style('stroke-width', ()=>{\n                   \t\tif (zoomLev <= 11) {\n\t                        return 1;\n\t                    } else if (zoomLev == 12) {\n\t                        return 1.5;\n\t                    } else if (zoomLev == 13) {\n\t                        return 2;\n\t                    } else if (zoomLev == 14) {\n\t                        return 3;\n\t                    } else if (zoomLev == 15) {\n\t                        return 4;\n\t                    } else if (zoomLev == 16) {\n\t                \t\treturn 5;\n\t                    } else {\n\t                    \treturn 1;\n\t                    }\n                   })\n                   .style('fill', 'none')\n        \t\t       .attr('class', 'pointer-release'); // Release leaflet's css pointer-event:none\n\n\n          //remove loader\n          loader = document.getElementById('loader-bg');\n          loader.setAttribute('aria-hidden','true');\n\n        }// reset\n      })\n    }, //br\n\n     // running_routes (line)\n     running_routes: function running_routes() {\n\n      let projectPoint = function projectPoint(x, y) {\n        let point = map.latLngToLayerPoint(new L.LatLng(y,x)); // *Check lat lon, lon lat\n          this.stream.point(point.x, point.y);\n      };\n\n      // Transform positions\n      let transform = d3.geoTransform({point: projectPoint}),\n        path = d3.geoPath().projection(transform);\n\n      let svg_rr = d3.select(map.getPanes().overlayPane).append('svg').attr('id', 'running-routes');\n      let g_rr = svg_rr.append('g').attr('class', 'leaflet-zoom-hide');\n\n      //filters go in defs element\n      // let defs = svg_tr.append(\"defs\");\n\n      // let filter = defs.append(\"filter\")\n      //     .attr(\"id\", \"dot-blur\");\n\n      // filter.append(\"feGaussianBlur\")\n      //     .attr(\"in\", \"SourceGraphic\")\n      //     .attr(\"stdDeviation\", 1);\n\n      runningroutes_svg = document.getElementById('running-routes');\n\n      if (mapInitialize == true) {\n        runningroutes_svg.setAttribute('aria-hidden', 'true');\n      }\n\n      d3.json(runningroutes_path).then(function(geojson) {\n        geojson_rr = geojson;\n        let feature_rr = g_rr.selectAll('path')\n                              .data(geojson_rr.features)\n                              .enter()\n                              .append('path');\n\n        map.on('moveend', reset);\n        reset();\n\n        // Reposition the SVG to cover the features.\n        function reset() {\n          let bounds = path.bounds(geojson_rr),\n            topLeft = bounds[0],\n            bottomRight = bounds[1];\n\n            svg_rr.attr('width', bottomRight[0] - topLeft[0])\n                  .attr('height', bottomRight[1] - topLeft[1])\n                  .style('left', topLeft[0] + 'px')\n                  .style('top', topLeft[1] + 'px')\n                  .style('overflow', 'visible');\n\n            g_rr.attr('transform', 'translate(' + -topLeft[0] + ',' + -topLeft[1] + ')');\n\n            let zoomLev = map.getZoom();\n\n\t            feature_rr.attr('d', path)\n                   .style('stroke','rgb(247,53,99)')\n                   .style('opacity', 0.3)\n                   .style('stroke-width', ()=>{\n                   \t\tif (zoomLev <= 11) {\n\t                        return 2;\n\t                    } else if (zoomLev == 12) {\n\t                        return 3;\n\t                    } else if (zoomLev == 13) {\n\t                        return 4;\n\t                    } else if (zoomLev == 14) {\n\t                        return 5;\n\t                    } else if (zoomLev == 15) {\n\t                        return 6;\n\t                    } else if (zoomLev == 16) {\n\t                \t\treturn 7;\n\t                    } else {\n\t                    \treturn 3;\n\t                    }\n                   })\n                   .style('fill', 'none')\n        \t\t       .attr('class', 'pointer-release'); // Release leaflet's css pointer-event:none\n\n\n          //remove loader\n          loader = document.getElementById('loader-bg');\n          loader.setAttribute('aria-hidden','true');\n\n        }// reset\n      })\n    }, //rr\n\n    // sports facilities (point)\n    sports_facilities: function sports_facilitie() {\n\n      let projectPoint = function projectPoint(x, y) {\n\t\t\t\tlet point = map.latLngToLayerPoint(new L.LatLng(y,x)); // *Check lat lon, lon lat\n\t\t    \tthis.stream.point(point.x, point.y);\n\t\t\t};\n\n\t\t\t// Transform positions\n\t\t\tlet transform = d3.geoTransform({point: projectPoint}),\n\t\t\t\tpath = d3.geoPath().projection(transform);\n\n\t\t\tlet svg_sf = d3.select(map.getPanes().overlayPane).append('svg').attr('id', 'sports-facilities');\n\t\t  let g_sf = svg_sf.append('g').attr('class', 'leaflet-zoom-hide');\n\n      //filters go in defs element\n      let defs = svg_sf.append(\"defs\");\n\n      let filter = defs.append(\"filter\")\n          .attr(\"id\", \"dot-blur\");\n\n      filter.append(\"feGaussianBlur\")\n          .attr(\"in\", \"SourceGraphic\")\n          .attr(\"stdDeviation\", 1);\n\n      sportsfacilities_svg = document.getElementById('sports-facilities');\n\n      if (mapInitialize == true) {\n        sportsfacilities_svg.setAttribute('aria-hidden', 'true');\n      }\n\n      d3.json(sportsfacilities_path).then(function(geojson) {\n        geojson_sf = geojson;\n        let feature_sf = g_sf.selectAll('path')\n                              .data(geojson_sf.features)\n                              .enter()\n                              .append('path');\n\n        map.on('moveend', reset);\n        reset();\n\n        // Reposition the SVG to cover the features.\n        function reset() {\n          let bounds = path.bounds(geojson_sf),\n            topLeft = bounds[0],\n            bottomRight = bounds[1];\n\n            svg_sf.attr('width', bottomRight[0] - topLeft[0])\n                  .attr('height', bottomRight[1] - topLeft[1])\n                  .style('left', topLeft[0] + 'px')\n                  .style('top', topLeft[1] + 'px')\n                  .style('overflow', 'visible');\n\n            g_sf.attr('transform', 'translate(' + -topLeft[0] + ',' + -topLeft[1] + ')');\n\n            feature_sf.attr('d', path)\n              .style('stroke', '#666666') //#bbbbbb\n              .style('stroke-width', '.5px')\n              .attr('class', 'leaflet-interactive') // Release leaflet's css pointer-event:none\n              .style('cursor', 'pointer')\n              .style('fill', 'rgb(254, 90, 60)')\n\n              .style('opacity', '0')\n              .transition()\n              .duration(500)\n              .style('opacity', '0.7');\n\n            let zoomLev = map.getZoom();\n            console.log(zoomLev);\n\n            if (zoomLev <= 11) {\n                feature_sf.attr(\"d\", path.pointRadius(4));\n            } else if (zoomLev == 12) {\n                feature_sf.attr(\"d\", path.pointRadius(5));\n            } else if (zoomLev == 13) {\n                feature_sf.attr(\"d\", path.pointRadius(6));\n            } else if (zoomLev == 14) {\n                feature_sf.attr(\"d\", path.pointRadius(7));\n            } else if (zoomLev == 15) {\n                feature_sf.attr(\"d\", path.pointRadius(8));\n            } else if (zoomLev == 16) {\n                feature_sf.attr(\"d\", path.pointRadius(9));\n            } else if (zoomLev == 17) {\n                feature_sf.attr(\"d\", path.pointRadius(10));\n            } else if (zoomLev == 18) {\n                feature_sf.attr(\"d\", path.pointRadius(11));\n            } else if (zoomLev == 19) {\n                feature_sf.attr(\"d\", path.pointRadius(12));\n            } else {\n              feature_sf.attr(\"d\", path.pointRadius(6));\n            }\n\n            feature_sf.attr('d', path).on(\"mouseover\", handleMouseOver)\n              .on(\"mouseout\", handleMouseOut);\n\n          function handleMouseOver(d, i) {\n            // console.log('mouseover');\n            // console.log(d);\n            // console.log(i);\n\n            d3.select(this)\n              .transition()\n              .style('opacity', 1)\n              //.style('stroke', '#666666') //#bbbbbb\n              .style('stroke-width', '1px')\n              //.style(\"filter\",\"url(#dot-blur)\")\n              .duration(200)\n\n              tooltipType.innerText = i.properties.type;\n              tooltipContainerOL.setAttribute('aria-hidden','false');\n\n              if (i.properties.name !== null) {\n                tooltipName.innerText = i.properties.name;\n              } else {\n                tooltipName.innerText = 'Not available';\n              }\n          } //handleMouseOver\n\n          function handleMouseOut (d, i) {\n            tooltipContainerOL.setAttribute('aria-hidden','true');\n\n            d3.select(this)\n              .transition()\n              .style('opacity', 0.7)\n              .style('stroke-width', '.5px')\n              .duration(200);\n          }\n\n          //remove loader\n          loader = document.getElementById('loader-bg');\n          loader.setAttribute('aria-hidden','true');\n\n        }// reset\n      })\n    }, //sf\n\n    // medical facilities (point)\n    medical_facilities: function medical_facilities() {\n\n      let projectPoint = function projectPoint(x, y) {\n\t\t\t\tlet point = map.latLngToLayerPoint(new L.LatLng(y,x)); // *Check lat lon, lon lat\n\t\t    \tthis.stream.point(point.x, point.y);\n\t\t\t};\n\n\t\t\t// Transform positions\n\t\t\tlet transform = d3.geoTransform({point: projectPoint}),\n\t\t\t\tpath = d3.geoPath().projection(transform);\n\n\t\t\tlet svg_mf = d3.select(map.getPanes().overlayPane).append('svg').attr('id', 'medical-facilities');\n\t\t  let g_mf = svg_mf.append('g').attr('class', 'leaflet-zoom-hide');\n\n      //filters go in defs element\n      let defs = svg_mf.append(\"defs\");\n\n      let filter = defs.append(\"filter\")\n          .attr(\"id\", \"dot-blur\");\n\n      filter.append(\"feGaussianBlur\")\n          .attr(\"in\", \"SourceGraphic\")\n          .attr(\"stdDeviation\", 1);\n\n      medicalfacilities_svg = document.getElementById('medical-facilities');\n\n      if (mapInitialize == true) {\n        medicalfacilities_svg.setAttribute('aria-hidden', 'true');\n      }\n\n      d3.json(medicalfacilities_path).then(function(geojson) {\n        geojson_mf = geojson;\n        let feature_mf = g_mf.selectAll('path')\n                              .data(geojson_mf.features)\n                              .enter()\n                              .append('path');\n\n        map.on('moveend', reset);\n        reset();\n\n        // Reposition the SVG to cover the features.\n        function reset() {\n          let bounds = path.bounds(geojson_mf),\n            topLeft = bounds[0],\n            bottomRight = bounds[1];\n\n            svg_mf.attr('width', bottomRight[0] - topLeft[0])\n                  .attr('height', bottomRight[1] - topLeft[1])\n                  .style('left', topLeft[0] + 'px')\n                  .style('top', topLeft[1] + 'px')\n                  .style('overflow', 'visible');\n\n            g_mf.attr('transform', 'translate(' + -topLeft[0] + ',' + -topLeft[1] + ')');\n\n            feature_mf.attr('d', path)\n              .style('stroke', '#666666') //#bbbbbb\n              .style('stroke-width', '.5px')\n              .attr('class', 'leaflet-interactive') // Release leaflet's css pointer-event:none\n              .style('cursor', 'pointer')\n              .style('fill', 'rgb(31,120,180)')\n              //.style(\"filter\",\"url(#dot-blur)\")\n              .style('opacity', '0')\n              .transition()\n              .duration(500)\n              .style('opacity', '0.7');\n\n            let zoomLev = map.getZoom();\n            console.log(zoomLev);\n\n            if (zoomLev <= 11) {\n                feature_mf.attr(\"d\", path.pointRadius(4));\n            } else if (zoomLev == 12) {\n                feature_mf.attr(\"d\", path.pointRadius(5));\n            } else if (zoomLev == 13) {\n                feature_mf.attr(\"d\", path.pointRadius(6));\n            } else if (zoomLev == 14) {\n                feature_mf.attr(\"d\", path.pointRadius(7));\n            } else if (zoomLev == 15) {\n                feature_mf.attr(\"d\", path.pointRadius(8));\n            } else if (zoomLev == 16) {\n                feature_mf.attr(\"d\", path.pointRadius(9));\n            } else if (zoomLev == 17) {\n                feature_mf.attr(\"d\", path.pointRadius(10));\n            } else if (zoomLev == 18) {\n                feature_mf.attr(\"d\", path.pointRadius(11));\n            } else if (zoomLev == 19) {\n                feature_mf.attr(\"d\", path.pointRadius(12));\n            } else {\n              feature_mf.attr(\"d\", path.pointRadius(6));\n            }\n\n            feature_mf.attr('d', path).on(\"mouseover\", handleMouseOver)\n              .on(\"mouseout\", handleMouseOut);\n\n          function handleMouseOver(d, i) {\n            // console.log('mouseover');\n            // console.log(d);\n            // console.log(i);\n\n            d3.select(this)\n              .transition()\n              .style('opacity', 1)\n              .style('stroke-width', '1px')\n              .duration(200);\n\n              tooltipType.innerText = i.properties.type;\n              tooltipContainerOL.setAttribute('aria-hidden','false');\n\n              if (i.properties.name !== null) {\n                tooltipName.innerText = i.properties.name;\n              } else {\n                tooltipName.innerText = 'Not available';\n              }\n          } //handleMouseOver\n\n          function handleMouseOut (d, i) {\n            tooltipContainerOL.setAttribute('aria-hidden','true');\n\n            d3.select(this)\n              .transition()\n              .style('opacity', 0.7)\n              .style('stroke-width', '.5px')\n              .duration(200);\n          }\n\n          //remove loader\n          loader = document.getElementById('loader-bg');\n          loader.setAttribute('aria-hidden','true');\n\n        }// reset\n      })\n    }, //mf\n\n    // community centers (point)\n    community_centers: function community_centers() {\n\n      let projectPoint = function projectPoint(x, y) {\n\t\t\t\tlet point = map.latLngToLayerPoint(new L.LatLng(y,x)); // *Check lat lon, lon lat\n\t\t    \tthis.stream.point(point.x, point.y);\n\t\t\t};\n\n\t\t\t// Transform positions\n\t\t\tlet transform = d3.geoTransform({point: projectPoint}),\n\t\t\t\tpath = d3.geoPath().projection(transform);\n\n\t\t\tlet svg_cc = d3.select(map.getPanes().overlayPane).append('svg').attr('id', 'community-centers');\n\t\t  let g_cc = svg_cc.append('g').attr('class', 'leaflet-zoom-hide');\n\n      //filters go in defs element\n      let defs = svg_cc.append(\"defs\");\n\n      let filter = defs.append(\"filter\")\n          .attr(\"id\", \"dot-blur\");\n\n      filter.append(\"feGaussianBlur\")\n          .attr(\"in\", \"SourceGraphic\")\n          .attr(\"stdDeviation\", 1);\n\n      communitycenters_svg = document.getElementById('community-centers');\n\n      if (mapInitialize == true) {\n        communitycenters_svg.setAttribute('aria-hidden', 'true');\n      }\n\n      d3.json(communitycenters_path).then(function(geojson) {\n        geojson_cc = geojson;\n        let feature_cc = g_cc.selectAll('path')\n                              .data(geojson_cc.features)\n                              .enter()\n                              .append('path');\n\n        map.on('moveend', reset);\n        reset();\n\n        // Reposition the SVG to cover the features.\n        function reset() {\n          let bounds = path.bounds(geojson_cc),\n            topLeft = bounds[0],\n            bottomRight = bounds[1];\n\n            svg_cc.attr('width', bottomRight[0] - topLeft[0])\n                  .attr('height', bottomRight[1] - topLeft[1])\n                  .style('left', topLeft[0] + 'px')\n                  .style('top', topLeft[1] + 'px')\n                  .style('overflow', 'visible');\n\n            g_cc.attr('transform', 'translate(' + -topLeft[0] + ',' + -topLeft[1] + ')');\n\n            feature_cc.attr('d', path)\n              .style('stroke', '#666666') //#bbbbbb\n              .style('stroke-width', '.5px')\n              .attr('class', 'leaflet-interactive') // Release leaflet's css pointer-event:none\n              .style('cursor', 'pointer')\n              .style('fill', 'rgb(244, 240, 52)')\n              //.style(\"filter\",\"url(#dot-blur)\")\n              .style('opacity', '0')\n              .transition()\n              .duration(500)\n              .style('opacity', '0.7');\n\n            let zoomLev = map.getZoom();\n            console.log(zoomLev);\n\n            if (zoomLev <= 11) {\n                feature_cc.attr(\"d\", path.pointRadius(4));\n            } else if (zoomLev == 12) {\n                feature_cc.attr(\"d\", path.pointRadius(5));\n            } else if (zoomLev == 13) {\n                feature_cc.attr(\"d\", path.pointRadius(6));\n            } else if (zoomLev == 14) {\n                feature_cc.attr(\"d\", path.pointRadius(7));\n            } else if (zoomLev == 15) {\n                feature_cc.attr(\"d\", path.pointRadius(8));\n            } else if (zoomLev == 16) {\n                feature_cc.attr(\"d\", path.pointRadius(9));\n            } else if (zoomLev == 17) {\n                feature_cc.attr(\"d\", path.pointRadius(10));\n            } else if (zoomLev == 18) {\n                feature_cc.attr(\"d\", path.pointRadius(11));\n            } else if (zoomLev == 19) {\n                feature_cc.attr(\"d\", path.pointRadius(12));\n            } else {\n              feature_cc.attr(\"d\", path.pointRadius(6));\n            }\n\n            feature_cc.attr('d', path).on(\"mouseover\", handleMouseOver)\n              .on(\"mouseout\", handleMouseOut);\n\n          function handleMouseOver(d, i) {\n            // console.log('mouseover');\n            // console.log(d);\n            // console.log(i);\n\n            d3.select(this)\n              .transition()\n              .style('opacity', 1)\n              .style('stroke-width', '1px')\n              .duration(200);\n\n              tooltipType.innerText = i.properties.type;\n              tooltipContainerOL.setAttribute('aria-hidden','false');\n\n              if (i.properties.name !== null) {\n                tooltipName.innerText = i.properties.name;\n              } else {\n                tooltipName.innerText = 'Not available';\n              }\n          } //handleMouseOver\n\n          function handleMouseOut (d, i) {\n            tooltipContainerOL.setAttribute('aria-hidden','true');\n\n            d3.select(this)\n              .transition()\n              .style('opacity', 0.7)\n              .style('stroke-width', '.5px')\n              .duration(200);\n          }\n\n          //remove loader\n          loader = document.getElementById('loader-bg');\n          loader.setAttribute('aria-hidden','true');\n\n        }// reset\n      })\n    }, //cc\n\n    // sports shops (point)\n    sports_shops: function sports_shops() {\n\n      let projectPoint = function projectPoint(x, y) {\n\t\t\t\tlet point = map.latLngToLayerPoint(new L.LatLng(y,x)); // *Check lat lon, lon lat\n\t\t    \tthis.stream.point(point.x, point.y);\n\t\t\t};\n\n\t\t\t// Transform positions\n\t\t\tlet transform = d3.geoTransform({point: projectPoint}),\n\t\t\t\tpath = d3.geoPath().projection(transform);\n\n\t\t\tlet svg_ss = d3.select(map.getPanes().overlayPane).append('svg').attr('id', 'sports-shops');\n\t\t  let g_ss = svg_ss.append('g').attr('class', 'leaflet-zoom-hide');\n\n      //filters go in defs element\n      let defs = svg_ss.append(\"defs\");\n\n      let filter = defs.append(\"filter\")\n          .attr(\"id\", \"dot-blur\");\n\n      filter.append(\"feGaussianBlur\")\n          .attr(\"in\", \"SourceGraphic\")\n          .attr(\"stdDeviation\", 1);\n\n      sportsshops_svg = document.getElementById('sports-shops');\n\n      if (mapInitialize == true) {\n        sportsshops_svg.setAttribute('aria-hidden', 'true');\n      }\n\n      d3.json(sportsshops_path).then(function(geojson) {\n        geojson_ss = geojson;\n        let feature_ss = g_ss.selectAll('path')\n                              .data(geojson_ss.features)\n                              .enter()\n                              .append('path');\n\n        map.on('moveend', reset);\n        reset();\n\n        // Reposition the SVG to cover the features.\n        function reset() {\n          let bounds = path.bounds(geojson_ss),\n            topLeft = bounds[0],\n            bottomRight = bounds[1];\n\n            svg_ss.attr('width', bottomRight[0] - topLeft[0])\n                  .attr('height', bottomRight[1] - topLeft[1])\n                  .style('left', topLeft[0] + 'px')\n                  .style('top', topLeft[1] + 'px')\n                  .style('overflow', 'visible');\n\n            g_ss.attr('transform', 'translate(' + -topLeft[0] + ',' + -topLeft[1] + ')');\n\n            feature_ss.attr('d', path)\n              .style('stroke', '#666666') //#bbbbbb\n              .style('stroke-width', '.5px')\n              .attr('class', 'leaflet-interactive') // Release leaflet's css pointer-event:none\n              .style('cursor', 'pointer')\n              .style('fill', 'rgb(134, 87, 147)')\n              //.style(\"filter\",\"url(#dot-blur)\")\n              .style('opacity', '0')\n              .transition()\n              .duration(500)\n              .style('opacity', '0.7');\n\n            let zoomLev = map.getZoom();\n            console.log(zoomLev);\n\n            if (zoomLev <= 11) {\n                feature_ss.attr(\"d\", path.pointRadius(4));\n            } else if (zoomLev == 12) {\n                feature_ss.attr(\"d\", path.pointRadius(5));\n            } else if (zoomLev == 13) {\n                feature_ss.attr(\"d\", path.pointRadius(6));\n            } else if (zoomLev == 14) {\n                feature_ss.attr(\"d\", path.pointRadius(7));\n            } else if (zoomLev == 15) {\n                feature_ss.attr(\"d\", path.pointRadius(8));\n            } else if (zoomLev == 16) {\n                feature_ss.attr(\"d\", path.pointRadius(9));\n            } else if (zoomLev == 17) {\n                feature_ss.attr(\"d\", path.pointRadius(10));\n            } else if (zoomLev == 18) {\n                feature_ss.attr(\"d\", path.pointRadius(11));\n            } else if (zoomLev == 19) {\n                feature_ss.attr(\"d\", path.pointRadius(12));\n            } else {\n              feature_ss.attr(\"d\", path.pointRadius(6));\n            }\n\n            feature_ss.attr('d', path).on(\"mouseover\", handleMouseOver)\n              .on(\"mouseout\", handleMouseOut);\n\n          function handleMouseOver(d, i) {\n            // console.log('mouseover');\n            // console.log(d);\n            // console.log(i);\n\n            d3.select(this)\n              .transition()\n              .style('opacity', 1)\n              .style('stroke-width', '1px')\n              .duration(200);\n\n              tooltipType.innerText = i.properties.type;\n              tooltipContainerOL.setAttribute('aria-hidden','false');\n\n              if (i.properties.name !== null) {\n                tooltipName.innerText = i.properties.name;\n              } else {\n                tooltipName.innerText = 'Not available';\n              }\n          } //handleMouseOver\n\n          function handleMouseOut (d, i) {\n            tooltipContainerOL.setAttribute('aria-hidden','true');\n\n            d3.select(this)\n              .transition()\n              .style('opacity', 0.7)\n              .style('stroke-width', '.5px')\n              .duration(200);\n          }\n\n          //remove loader\n          loader = document.getElementById('loader-bg');\n          loader.setAttribute('aria-hidden','true');\n\n        }// reset\n      })\n    }, //ss\n\n    // grocery stores (point)\n    grocery_stores: function grocery_stores() {\n\n      let projectPoint = function projectPoint(x, y) {\n\t\t\t\tlet point = map.latLngToLayerPoint(new L.LatLng(y,x)); // *Check lat lon, lon lat\n\t\t    \tthis.stream.point(point.x, point.y);\n\t\t\t};\n\n\t\t\t// Transform positions\n\t\t\tlet transform = d3.geoTransform({point: projectPoint}),\n\t\t\t\tpath = d3.geoPath().projection(transform);\n\n\t\t\tlet svg_gs = d3.select(map.getPanes().overlayPane).append('svg').attr('id', 'grocery-stores');\n\t\t  let g_gs = svg_gs.append('g').attr('class', 'leaflet-zoom-hide');\n\n      //filters go in defs element\n      let defs = svg_gs.append(\"defs\");\n\n      let filter = defs.append(\"filter\")\n          .attr(\"id\", \"dot-blur\");\n\n      filter.append(\"feGaussianBlur\")\n          .attr(\"in\", \"SourceGraphic\")\n          .attr(\"stdDeviation\", 1);\n\n      let grocerystores_svg = document.getElementById('grocery-stores');\n\n      if (mapInitialize == true) {\n        grocerystores_svg.setAttribute('aria-hidden', 'true');\n      }\n\n      d3.json(grocerystores_path).then(function(geojson) {\n        geojson_gs = geojson;\n        let feature_gs = g_gs.selectAll('path')\n                              .data(geojson_gs.features)\n                              .enter()\n                              .append('path');\n\n        map.on('moveend', reset);\n        reset();\n\n        // Reposition the SVG to cover the features.\n        function reset() {\n          let bounds = path.bounds(geojson_gs),\n            topLeft = bounds[0],\n            bottomRight = bounds[1];\n\n            svg_gs.attr('width', bottomRight[0] - topLeft[0])\n                  .attr('height', bottomRight[1] - topLeft[1])\n                  .style('left', topLeft[0] + 'px')\n                  .style('top', topLeft[1] + 'px')\n                  .style('overflow', 'visible');\n\n            g_gs.attr('transform', 'translate(' + -topLeft[0] + ',' + -topLeft[1] + ')');\n\n            feature_gs.attr('d', path)\n              .style('stroke', '#666666') //#bbbbbb\n              .style('stroke-width', '.5px')\n              .attr('class', 'leaflet-interactive') // Release leaflet's css pointer-event:none\n              .style('cursor', 'pointer')\n              .style('fill', 'rgb(121, 164, 167)')\n              //.style(\"filter\",\"url(#dot-blur)\")\n              .style('opacity', '0')\n              .transition()\n              .duration(500)\n              .style('opacity', '0.7');\n\n            let zoomLev = map.getZoom();\n            console.log(zoomLev);\n\n            if (zoomLev <= 11) {\n                feature_gs.attr(\"d\", path.pointRadius(4));\n            } else if (zoomLev == 12) {\n                feature_gs.attr(\"d\", path.pointRadius(5));\n            } else if (zoomLev == 13) {\n                feature_gs.attr(\"d\", path.pointRadius(6));\n            } else if (zoomLev == 14) {\n                feature_gs.attr(\"d\", path.pointRadius(7));\n            } else if (zoomLev == 15) {\n                feature_gs.attr(\"d\", path.pointRadius(8));\n            } else if (zoomLev == 16) {\n                feature_gs.attr(\"d\", path.pointRadius(9));\n            } else if (zoomLev == 17) {\n                feature_gs.attr(\"d\", path.pointRadius(10));\n            } else if (zoomLev == 18) {\n                feature_gs.attr(\"d\", path.pointRadius(11));\n            } else if (zoomLev == 19) {\n                feature_gs.attr(\"d\", path.pointRadius(12));\n            } else {\n              feature_gs.attr(\"d\", path.pointRadius(6));\n            }\n\n            feature_gs.attr('d', path).on(\"mouseover\", handleMouseOver)\n              .on(\"mouseout\", handleMouseOut);\n\n          function handleMouseOver(d, i) {\n            // console.log('mouseover');\n            // console.log(d);\n            // console.log(i);\n\n            d3.select(this)\n              .transition()\n              .style('opacity', 1)\n              .style('stroke-width', '1px')\n              .duration(200);\n\n              tooltipType.innerText = i.properties.type;\n              tooltipContainerOL.setAttribute('aria-hidden','false');\n\n              if (i.properties.name !== null) {\n                tooltipName.innerText = i.properties.name;\n              } else {\n                tooltipName.innerText = 'Not available';\n              }\n          } //handleMouseOver\n\n          function handleMouseOut (d, i) {\n            tooltipContainerOL.setAttribute('aria-hidden','true');\n\n            d3.select(this)\n              .transition()\n              .style('opacity', 0.7)\n              .style('stroke-width', '.5px')\n              .duration(200);\n          }\n\n          //remove loader\n          loader = document.getElementById('loader-bg');\n          loader.setAttribute('aria-hidden','true');\n\n        }// reset\n      })\n    }, //gs\n\n    // fast foods (point)\n    fast_foods: function fast_foods() {\n\n      let projectPoint = function projectPoint(x, y) {\n\t\t\t\tlet point = map.latLngToLayerPoint(new L.LatLng(y,x)); // *Check lat lon, lon lat\n\t\t    \tthis.stream.point(point.x, point.y);\n\t\t\t};\n\n\t\t\t// Transform positions\n\t\t\tlet transform = d3.geoTransform({point: projectPoint}),\n\t\t\t\tpath = d3.geoPath().projection(transform);\n\n\t\t\tlet svg_ff = d3.select(map.getPanes().overlayPane).append('svg').attr('id', 'fast-foods');\n\t\t  let g_ff = svg_ff.append('g').attr('class', 'leaflet-zoom-hide');\n\n      //filters go in defs element\n      let defs = svg_ff.append(\"defs\");\n\n      let filter = defs.append(\"filter\")\n          .attr(\"id\", \"dot-blur\");\n\n      filter.append(\"feGaussianBlur\")\n          .attr(\"in\", \"SourceGraphic\")\n          .attr(\"stdDeviation\", 1);\n\n      let fastfoods_svg = document.getElementById('fast-foods');\n\n      if (mapInitialize == true) {\n        fastfoods_svg.setAttribute('aria-hidden', 'true');\n      }\n\n      d3.json(fastfoods_path).then(function(geojson) {\n        geojson_ff = geojson;\n        let feature_ff = g_ff.selectAll('path')\n                              .data(geojson_ff.features)\n                              .enter()\n                              .append('path');\n\n        map.on('moveend', reset);\n        reset();\n\n        // Reposition the SVG to cover the features.\n        function reset() {\n          let bounds = path.bounds(geojson_ff),\n            topLeft = bounds[0],\n            bottomRight = bounds[1];\n\n            svg_ff.attr('width', bottomRight[0] - topLeft[0])\n                  .attr('height', bottomRight[1] - topLeft[1])\n                  .style('left', topLeft[0] + 'px')\n                  .style('top', topLeft[1] + 'px')\n                  .style('overflow', 'visible');\n\n            g_ff.attr('transform', 'translate(' + -topLeft[0] + ',' + -topLeft[1] + ')');\n\n            feature_ff.attr('d', path)\n              .style('stroke', '#666666') //#bbbbbb\n              .style('stroke-width', '.5px')\n              .attr('class', 'leaflet-interactive') // Release leaflet's css pointer-event:none\n              .style('cursor', 'pointer')\n              .style('fill', 'rgb(164, 101, 30)')\n              //.style(\"filter\",\"url(#dot-blur)\")\n              .style('opacity', '0')\n              .transition()\n              .duration(500)\n              .style('opacity', '0.7');\n\n            let zoomLev = map.getZoom();\n            console.log(zoomLev);\n\n            if (zoomLev <= 11) {\n                feature_ff.attr(\"d\", path.pointRadius(4));\n            } else if (zoomLev == 12) {\n                feature_ff.attr(\"d\", path.pointRadius(5));\n            } else if (zoomLev == 13) {\n                feature_ff.attr(\"d\", path.pointRadius(6));\n            } else if (zoomLev == 14) {\n                feature_ff.attr(\"d\", path.pointRadius(7));\n            } else if (zoomLev == 15) {\n                feature_ff.attr(\"d\", path.pointRadius(8));\n            } else if (zoomLev == 16) {\n                feature_ff.attr(\"d\", path.pointRadius(9));\n            } else if (zoomLev == 17) {\n                feature_ff.attr(\"d\", path.pointRadius(10));\n            } else if (zoomLev == 18) {\n                feature_ff.attr(\"d\", path.pointRadius(11));\n            } else if (zoomLev == 19) {\n                feature_ff.attr(\"d\", path.pointRadius(12));\n            } else {\n              feature_ff.attr(\"d\", path.pointRadius(6));\n            }\n\n            feature_ff.attr('d', path).on(\"mouseover\", handleMouseOver)\n              .on(\"mouseout\", handleMouseOut);\n\n          function handleMouseOver(d, i) {\n            // console.log('mouseover');\n            // console.log(d);\n            // console.log(i);\n\n            d3.select(this)\n              .transition()\n              .style('opacity', 1)\n              .style('stroke-width', '1px')\n              .duration(200);\n\n\n              // tooltipConcernsTopic.innerText = i.properties.type;\n              // tooltipConcernsTime =\n              tooltipContainerPC.setAttribute('aria-hidden','false');\n\n              // if (i.properties.name !== null) {\n              //   tooltipName.innerText = i.properties.name;\n              // } else {\n              //   tooltipName.innerText = 'Not available';\n              // }\n          } //handleMouseOver\n\n          function handleMouseOut (d, i) {\n            tooltipContainerPC.setAttribute('aria-hidden','true');\n\n            d3.select(this)\n              .transition()\n              .style('opacity', 0.7)\n              .style('stroke-width', '.5px')\n              .duration(200);\n          }\n\n          //remove loader\n          loader = document.getElementById('loader-bg');\n          loader.setAttribute('aria-hidden','true');\n\n        }// reset\n      })\n    }, //ff\n\n    // comments (point)\n    public_concerns: function public_concerns() {\n\n      let projectPoint = function projectPoint(x, y) {\n\t\t\t\tlet point = map.latLngToLayerPoint(new L.LatLng(y,x)); // *Check lat lon, lon lat\n\t\t    \tthis.stream.point(point.x, point.y);\n\t\t\t};\n\n\t\t\t// Transform positions\n\t\t\tlet transform = d3.geoTransform({point: projectPoint}),\n\t\t\t\tpath = d3.geoPath().projection(transform);\n\n\t\t\tlet svg_pc = d3.select(map.getPanes().overlayPane).append('svg').attr('id', 'public-concerns');\n\t\t  let g_pc = svg_pc.append('g').attr('class', 'leaflet-zoom-hide');\n\n\n\n      let publicconcerns_svg = document.getElementById('public-concerns');\n\n      if (mapInitialize == true) {\n        publicconcerns_svg.setAttribute('aria-hidden', 'true');\n      }\n\n      d3.json(publicconcerns_path).then(function(geojson) {\n        geojson_pc = geojson;\n        let feature_pc = g_pc.selectAll('path')\n                              .data(geojson_pc.features)\n                              .enter()\n                              .append('path');\n\n        map.on('moveend', reset);\n        reset();\n\n        // Reposition the SVG to cover the features.\n        function reset() {\n          let bounds = path.bounds(geojson_pc),\n            topLeft = bounds[0],\n            bottomRight = bounds[1];\n\n            svg_pc.attr('width', bottomRight[0] - topLeft[0])\n                  .attr('height', bottomRight[1] - topLeft[1])\n                  .style('left', topLeft[0] + 'px')\n                  .style('top', topLeft[1] + 'px')\n                  .style('overflow', 'visible');\n\n            g_pc.attr('transform', 'translate(' + -topLeft[0] + ',' + -topLeft[1] + ')');\n\n            feature_pc.attr('d', path)\n              .style('stroke', '#666666') //#bbbbbb\n              .style('stroke-width', '.5px')\n              .attr('class', 'leaflet-interactive') // Release leaflet's css pointer-event:none\n              .style('cursor', 'pointer')\n              .style('fill', (d)=>{\n                if (d.properties.onderwerp == 'Noise problem') {\n                  return 'rgb(253,192,134)';\n                } else if (d.properties.onderwerp == 'Dirty pavement') {\n                    return 'rgb(56,108,176)';\n                } else if (d.properties.onderwerp == 'Sports accommodation') {\n                    return 'rgb(255,255,153)';\n                } else if (d.properties.onderwerp == 'Playground equipment') {\n                    return 'rgb(127,201,127)';\n                } else if (d.properties.onderwerp == 'Unsafe traffic') {\n                    return 'rgb(240,2,127)';\n                } else if (d.properties.onderwerp == 'Bad odor') {\n                      return 'rgb(190,174,212)';\n                }\n              })\n              //.style(\"filter\",\"url(#dot-blur)\")\n              .style('opacity', '0')\n              .transition()\n              .duration(500)\n              .style('opacity', '0.7');\n\n            let zoomLev = map.getZoom();\n            console.log(zoomLev);\n\n            if (zoomLev <= 11) {\n                feature_pc.attr(\"d\", path.pointRadius(4));\n            } else if (zoomLev == 12) {\n                feature_pc.attr(\"d\", path.pointRadius(5));\n            } else if (zoomLev == 13) {\n                feature_pc.attr(\"d\", path.pointRadius(6));\n            } else if (zoomLev == 14) {\n                feature_pc.attr(\"d\", path.pointRadius(7));\n            } else if (zoomLev == 15) {\n                feature_pc.attr(\"d\", path.pointRadius(8));\n            } else if (zoomLev == 16) {\n                feature_pc.attr(\"d\", path.pointRadius(9));\n            } else if (zoomLev == 17) {\n                feature_pc.attr(\"d\", path.pointRadius(10));\n            } else if (zoomLev == 18) {\n                feature_pc.attr(\"d\", path.pointRadius(11));\n            } else if (zoomLev == 19) {\n                feature_pc.attr(\"d\", path.pointRadius(12));\n            } else {\n              feature_pc.attr(\"d\", path.pointRadius(6));\n            }\n\n            feature_pc.attr('d', path).on(\"mouseover\", handleMouseOver)\n              .on(\"mouseout\", handleMouseOut);\n\n          function handleMouseOver(d, i) {\n            console.log('mouseover');\n            // console.log(d);\n            // console.log(i);\n\n            d3.select(this)\n              .transition()\n              .style('opacity', 1)\n              .style('stroke-width', '1px')\n              .duration(200);\n\n              tooltipConcernsTopic.innerText = i.properties.onderwerp;\n              tooltipConcernsTime.innerText = i.properties.aangemaakt;\n              tooltipContainerPC.setAttribute('aria-hidden','false');\n\n\n\n          } //handleMouseOver\n\n          function handleMouseOut (d, i) {\n            tooltipContainerPC.setAttribute('aria-hidden','true');\n\n            d3.select(this)\n              .transition()\n              .style('opacity', 0.7)\n              .style('stroke-width', '.5px')\n              .duration(200);\n          }\n\n          //remove loader\n          loader = document.getElementById('loader-bg');\n          loader.setAttribute('aria-hidden','true');\n\n        }// reset\n      })\n    }, //cm\n\n    // air quality (point)\n    air_quality: function air_quality() {\n\n      let projectPoint = function projectPoint(x, y) {\n\t\t\t\tlet point = map.latLngToLayerPoint(new L.LatLng(y,x)); // *Check lat lon, lon lat\n\t\t    \tthis.stream.point(point.x, point.y);\n\t\t\t};\n\n\t\t\t// Transform positions\n\t\t\tlet transform = d3.geoTransform({point: projectPoint}),\n\t\t\t\tpath = d3.geoPath().projection(transform);\n\n\t\t\tlet svg_aq = d3.select(map.getPanes().overlayPane).append('svg').attr('id', 'air-quality');\n\t\t  let g_aq = svg_aq.append('g').attr('class', 'leaflet-zoom-hide');\n\n      //filters go in defs element\n      let defs = svg_aq.append(\"defs\");\n\n      let filter = defs.append(\"filter\")\n          .attr(\"id\", \"dot-blur\");\n\n      filter.append(\"feGaussianBlur\")\n          .attr(\"in\", \"SourceGraphic\")\n          .attr(\"stdDeviation\", \"10\");\n\n      airquality_svg = document.getElementById('air-quality');\n\n      if (mapInitialize == true) {\n        airquality_svg.setAttribute('aria-hidden', 'true');\n      }\n\n      d3.json(airquality_path).then(function(geojson) {\n        geojson_aq = geojson;\n        let feature_aq = g_aq.selectAll('path')\n                              .data(geojson_aq.features)\n                              .enter()\n                              .append('path');\n\n        map.on('moveend', reset);\n        reset();\n\n        // Reposition the SVG to cover the features.\n        function reset() {\n          let bounds = path.bounds(geojson_aq),\n            topLeft = bounds[0],\n            bottomRight = bounds[1];\n\n            svg_aq.attr('width', bottomRight[0] - topLeft[0])\n                  .attr('height', bottomRight[1] - topLeft[1])\n                  .style('left', topLeft[0] + 'px')\n                  .style('top', topLeft[1] + 'px')\n                  .style('overflow', 'visible');\n\n            g_aq.attr('transform', 'translate(' + -topLeft[0] + ',' + -topLeft[1] + ')');\n\n\n            // const pm25max = d3.max(geojson_aq.features, function(d) { return d['properties']['PM2.5'] });\n\t\t        // const pm25min = d3.min(geojson_aq.features, function(d) { return d['properties']['PM2.5'] });\n\n            // console.log(pm25max);\n            // console.log(pm25min);\n\n            feature_aq.attr('d', path)\n              .style('stroke', '#999') //#bbbbbb\n              .style('stroke-width', '0px')\n              .attr('class', 'leaflet-interactive') // Release leaflet's css pointer-event:none\n              .style('cursor', 'pointer')\n              .style('fill', (d)=> {\n                if (d.properties['PM2.5'] >= 7) {\n                    return 'rgb(115,115,115)';\n                } else if (d.properties['PM2.5'] >= 4 & d.properties['PM2.5'] < 7) {\n                    return 'rgb(189,189,189)';\n                } else if (d.properties['PM2.5'] < 4) {\n                    return 'rgb(240,240,240)';\n                }\n              })\n              .style(\"filter\",\"url(#dot-blur)\")\n              .style('opacity', '0')\n              .transition()\n              .duration(500)\n              .style('opacity', '0.8');\n\n            let zoomLev = map.getZoom();\n            console.log(zoomLev);\n\n            if (zoomLev <= 11) {\n                feature_aq.attr(\"d\", path.pointRadius(8));\n            } else if (zoomLev == 12) {\n                feature_aq.attr(\"d\", path.pointRadius(10));\n            } else if (zoomLev == 13) {\n                feature_aq.attr(\"d\", path.pointRadius(12));\n            } else if (zoomLev == 14) {\n                feature_aq.attr(\"d\", path.pointRadius(14));\n            } else if (zoomLev == 15) {\n                feature_aq.attr(\"d\", path.pointRadius(16));\n            } else if (zoomLev == 16) {\n                feature_aq.attr(\"d\", path.pointRadius(18));\n            } else if (zoomLev == 17) {\n                feature_aq.attr(\"d\", path.pointRadius(22));\n            } else if (zoomLev == 18) {\n                feature_aq.attr(\"d\", path.pointRadius(22));\n            } else if (zoomLev == 19) {\n                feature_aq.attr(\"d\", path.pointRadius(24));\n            } else {\n              feature_aq.attr(\"d\", path.pointRadius(12));\n            }\n\n            feature_aq.attr('d', path).on(\"mouseover\", handleMouseOver)\n              .on(\"mouseout\", handleMouseOut);\n\n          function handleMouseOver(d, i) {\n            // console.log('mouseover');\n            // console.log(d);\n            // console.log(i);\n\n            d3.select(this)\n              .transition()\n              .style('opacity', 1)\n              .style('stroke-width', '1px')\n              .duration(200);\n\n              console.log(i.properties['PM1']);\n\n              if (i.properties['PM1'] != null) {\n                tooltipPM1.innerText = i.properties['PM1'] + \" μg/m3\";\n              } else {\n                tooltipPM1.innerText = 'Not available';\n              }\n\n              if (i.properties['PM2.5'] != null) {\n                tooltipPM25.innerText = i.properties['PM2.5'] + \" μg/m3\";\n              } else {\n                tooltipPM25.innerText = 'Not available';\n              }\n\n              if (i.properties['PM10'] != null) {\n                tooltipPM10.innerText = i.properties['PM10'] + \" μg/m3\";\n              } else {\n                tooltipPM10.innerText = 'Not available';\n              }\n\n              tooltipContainerAQ.setAttribute('aria-hidden','false');\n          } //handleMouseOver\n\n          function handleMouseOut (d, i) {\n            tooltipContainerAQ.setAttribute('aria-hidden','true');\n\n            d3.select(this)\n              .transition()\n              .style('opacity', 0.8)\n              .style('stroke-width', '0px')\n              .duration(200);\n          }\n\n          //remove loader\n          loader = document.getElementById('loader-bg');\n          loader.setAttribute('aria-hidden','true');\n\n        }// reset\n      })\n    }, //aq\n\n\n\n    // Parks and playgrounds (polygon)\n    parks_playgrounds: function parks_playgrounds() {\n\n      let projectPoint = function projectPoint(x, y) {\n        let point = map.latLngToLayerPoint(new L.LatLng(y,x)); // *Check lat lon, lon lat\n          this.stream.point(point.x, point.y);\n      };\n\n      // Transform positions\n      let transform = d3.geoTransform({point: projectPoint}),\n        path = d3.geoPath().projection(transform);\n\n      let svg_pp = d3.select(map.getPanes().overlayPane).append('svg').attr('id', 'parks-playgrounds');\n      let g_pp = svg_pp.append('g').attr('class', 'leaflet-zoom-hide');\n\n\n      parksplaygrounds_svg = document.getElementById('parks-playgrounds');\n\n      if (mapInitialize == true) {\n        parksplaygrounds_svg.setAttribute('aria-hidden', 'true');\n      }\n\n      d3.json(parksplaygrounds_path).then(function(geojson) {\n        geojson_pp = geojson;\n        //console.log(geojson_pp);\n        let feature_pp = g_pp.selectAll('path')\n                              .data(geojson_pp.features)\n                              .enter()\n                              .append('path');\n\n        map.on('moveend', reset);\n        reset();\n\n        // Reposition the SVG to cover the features.\n        function reset() {\n          let bounds = path.bounds(geojson_pp),\n            topLeft = bounds[0],\n            bottomRight = bounds[1];\n\n            svg_pp.attr('width', bottomRight[0] - topLeft[0])\n                  .attr('height', bottomRight[1] - topLeft[1])\n                  .style('left', topLeft[0] + 'px')\n                  .style('top', topLeft[1] + 'px')\n                  .style('overflow', 'visible');\n\n            g_pp.attr('transform', 'translate(' + -topLeft[0] + ',' + -topLeft[1] + ')');\n\n            feature_pp.attr('d', path)\n                //.style('stroke', 'rgb(187,187,187)') //#bbbbbb\n                //.style('stroke-width', '1px')\n                .attr('class', 'leaflet-interactive') // Release leaflet's css pointer-event:none\n                .style('cursor', 'pointer')\n                .style('fill', 'green')//(d)=> {\n                  // if (d.properties[selectedAttribute] >= interval6) {\n                  //     return 'rgb(204,76,2)';\n                  // } else if (d.properties[selectedAttribute] >= interval4 & d.properties[selectedAttribute] < interval6) {\n                  //     return 'rgb(254,153,41)';\n                  // } else if (d.properties[selectedAttribute] >= interval2 & d.properties[selectedAttribute] < interval4) {\n                  //     return 'rgb(254,217,142)';\n                  // } else if (d.properties[selectedAttribute] >= interval0 & d.properties[selectedAttribute] < interval2) {\n                  //     return 'rgb(255,255,212)';\n                  // } else {\n                  //   return 'rgb(212,212,212)'; //#d4d4d4;\n                  // }\n                //})\n                .style('opacity', '0')\n                .transition()\n                .duration(500)\n                .style('opacity', '0.7');\n\n                feature_pp.attr('d', path).on(\"mouseover\", handleMouseOver)\n                  .on(\"mouseout\", handleMouseOut);\n\n\n              function handleMouseOver(d, i) {\n                // console.log('mouseover');\n                // console.log(d);\n                // console.log(i);\n\n                d3.select(this)\n                  .transition()\n                  .style('opacity', 0.4)\n                  .duration(200);\n\n                  tooltipType.innerText = i.properties.type;\n                  tooltipContainerOL.setAttribute('aria-hidden','false');\n\n                  if (i.properties.name !== null) {\n                    tooltipName.innerText = i.properties.name;\n                  } else {\n                    tooltipName.innerText = 'Not available';\n                  }\n              } //handleMouseOver\n\n              function handleMouseOut (d, i) {\n                tooltipContainerOL.setAttribute('aria-hidden','true');\n\n                d3.select(this)\n                  .transition()\n                  .style('opacity', 0.7)\n                  .duration(200);\n              }\n\n          //remove loader\n          loader = document.getElementById('loader-bg');\n          loader.setAttribute('aria-hidden','true');\n\n        }// reset\n      })\n    }, //pp\n\n    // green area (polygon)\n    green_area: function green_area() {\n\n      let projectPoint = function projectPoint(x, y) {\n        let point = map.latLngToLayerPoint(new L.LatLng(y,x)); // *Check lat lon, lon lat\n          this.stream.point(point.x, point.y);\n      };\n\n      // Transform positions\n      let transform = d3.geoTransform({point: projectPoint}),\n        path = d3.geoPath().projection(transform);\n\n      let svg_ga = d3.select(map.getPanes().overlayPane).append('svg').attr('id', 'green-area');\n      let g_ga = svg_ga.append('g').attr('class', 'leaflet-zoom-hide');\n\n\n      greenarea_svg = document.getElementById('green-area');\n\n      if (mapInitialize == true) {\n        greenarea_svg.setAttribute('aria-hidden', 'true');\n      }\n\n      d3.json(greenarea_path).then(function(geojson) {\n        geojson_ga = geojson;\n        //console.log(geojson_ga);\n        let feature_ga = g_ga.selectAll('path')\n                              .data(geojson_ga.features)\n                              .enter()\n                              .append('path');\n\n        map.on('moveend', reset);\n        reset();\n\n        // Reposition the SVG to cover the features.\n        function reset() {\n          let bounds = path.bounds(geojson_ga),\n            topLeft = bounds[0],\n            bottomRight = bounds[1];\n\n            svg_ga.attr('width', bottomRight[0] - topLeft[0])\n                  .attr('height', bottomRight[1] - topLeft[1])\n                  .style('left', topLeft[0] + 'px')\n                  .style('top', topLeft[1] + 'px')\n                  .style('overflow', 'visible');\n\n            g_ga.attr('transform', 'translate(' + -topLeft[0] + ',' + -topLeft[1] + ')');\n\n            feature_ga.attr('d', path)\n                // .style('stroke', 'rgb(187,187,187)') //#bbbbbb\n                // .style('stroke-width', '1px')\n                .attr('class', 'leaflet-interactive') // Release leaflet's css pointer-event:none\n                .style('cursor', 'pointer')\n                .style('fill', 'rgb(109,192,103)')//(d)=> {\n                  // if (d.properties[selectedAttribute] >= interval6) {\n                  //     return 'rgb(204,76,2)';\n                  // } else if (d.properties[selectedAttribute] >= interval4 & d.properties[selectedAttribute] < interval6) {\n                  //     return 'rgb(254,153,41)';\n                  // } else if (d.properties[selectedAttribute] >= interval2 & d.properties[selectedAttribute] < interval4) {\n                  //     return 'rgb(254,217,142)';\n                  // } else if (d.properties[selectedAttribute] >= interval0 & d.properties[selectedAttribute] < interval2) {\n                  //     return 'rgb(255,255,212)';\n                  // } else {\n                  //   return 'rgb(212,212,212)'; //#d4d4d4;\n                  // }\n                //})\n                .style('opacity', '0')\n                .transition()\n                .duration(500)\n                .style('opacity', '0.7');\n\n                feature_ga.attr('d', path).on(\"mouseover\", handleMouseOver)\n                  .on(\"mouseout\", handleMouseOut);\n\n\n              function handleMouseOver(d, i) {\n                // console.log('mouseover');\n                // console.log(d);\n                // console.log(i);\n\n                d3.select(this)\n                  .transition()\n                  .style('opacity', 0.4)\n                  .duration(200);\n\n                  function capitalize(initialLetter)\n                  {\n                      return initialLetter[0].toUpperCase() + initialLetter.slice(1);\n                  }\n\n                  tooltipType.innerText = capitalize(i.properties.type);\n                  tooltipContainerOL.setAttribute('aria-hidden','false');\n\n                  if (i.properties.name !== null) {\n                    tooltipName.innerText = capitalize(i.properties.name);\n                  } else {\n                    tooltipName.innerText = 'Not available';\n                  }\n              } //handleMouseOver\n\n              function handleMouseOut (d, i) {\n                tooltipContainerOL.setAttribute('aria-hidden','true');\n\n                d3.select(this)\n                  .transition()\n                  .style('opacity', 0.7)\n                  .duration(200);\n              }\n\n          //remove loader\n          loader = document.getElementById('loader-bg');\n          loader.setAttribute('aria-hidden','true');\n\n        }// reset\n      })\n    }, //pp\n\n  } //mapLayers\n\n  // Render all maplayers first\n  //TODO: See if the map layers can be rendered in background process (Web Worker?)\n  if (mapInitialize == true) {\n\n        mapLayers.basemap_buurt();\n        mapLayers.basemap_stadsdeel();\n        mapLayers.basemap_outline();\n        mapLayers.bennekel();\n        mapLayers.green_area();\n        mapLayers.parks_playgrounds();\n        mapLayers.traffic();\n        mapLayers.bike_routes();\n        mapLayers.running_routes();\n        mapLayers.sports_facilities();\n        mapLayers.medical_facilities();\n        mapLayers.community_centers();\n        mapLayers.sports_shops();\n        mapLayers.grocery_stores();\n        mapLayers.fast_foods();\n        mapLayers.public_concerns();\n        mapLayers.air_quality();\n\n  }\n\n  changeBasemap = function changeBasemap(value){\n    baseStatus = value;\n    console.log(value);\n    if (value == 'stadsdeel'){\n      basebuurt_svg.setAttribute('aria-hidden', 'true');\n      console.log(basebuurt_svg);\n      basestadsdeel_svg.setAttribute('aria-hidden', 'false');\n      bindDataBS(selectedAttribute, 'stadsdeel');\n      console.log(basestadsdeel_svg);\n    } else if (value == 'buurt') {\n      basebuurt_svg.setAttribute('aria-hidden', 'false');\n      basestadsdeel_svg.setAttribute('aria-hidden', 'true');\n      bindDataBB(selectedAttribute, 'buurt');\n    }\n  }\n\n  changeAttr = function (newAttr) {\n    //console.log('attr changed');\n    //console.log(newAttr);\n    //console.log(baseStatus);\n    selectedAttribute = newAttr;\n    if (baseStatus == 'buurt') {\n      bindDataBB(newAttr, baseStatus);\n      clickedPathActive = false;\n    } else if (baseStatus == 'stadsdeel') {\n      bindDataBS(newAttr, baseStatus);\n    }\n\n    basemapAttr.setAttribute('aria-serected', true);\n    basemapInfo.classList.add('active');\n  };\n\n\n\n  // addOverlay test\n  addOverlay = function (status, value) {\n    // console.log(status);\n    // console.log(value);\n    if (status == true && value != undefined) {\n      //console.log('add overlay');\n      document.getElementById(value).setAttribute('aria-hidden', 'false');\n    } else if (status == false && value != undefined) {\n      //console.log('remove overlay');\n      document.getElementById(value).setAttribute('aria-hidden', 'true');\n    }\n  }\n\n};\n\nfunction initializeMap() {\n  //console.log('map is initialized');\n  mapInitialize = true;\n  //console.log(mapInitialize);\n  baseStatus = 'buurt';\n  vizmaps();\n}\n\n//console.log('remote log test js here');\n// console.re.log('remote log test from js');\n\n\n//Bennekel data viz\nd3.json(bennekeldata_path).then(function(data) {\n  console.log(data);\n  br1Data = data;\n\n\n  //sort bars based on value\n      data = data.sort(function (a, b) {\n          return d3.ascending(a.Number, b.Number);\n      })\n\n      //set up svg using margin conventions - we'll need plenty of room on the left for labels\n      let margin = {\n          top: 120,\n          right: 40,\n          bottom: 20,\n          left: 280\n      };\n\n      let width = 600 - margin.left - margin.right,\n          height = 600 - margin.top - margin.bottom;\n\n      let svg = d3.select(\"#Bennekel-modal_inner\").append(\"svg\")\n          .attr(\"width\", width + margin.left + margin.right)\n          .attr(\"height\", height + margin.top + margin.bottom)\n          .append(\"g\")\n          .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n      let x = d3.scaleLinear()\n          .rangeRound([0, width])\n          .domain([0, d3.max(data, function (d) {\n              return d.Number;\n          })]);\n\n      let y = d3.scaleBand()\n          .rangeRound([height, 0], .1)\n          .domain(data.map(function (d) {\n              return d.Reasons;\n          }));\n\n      //make y axis to show bar names\n      let yAxis = d3.axisLeft(y)\n          .scale(y)\n          //no tick marks\n          .tickSize(0)\n\n\n\n\n      let xAxis = d3.axisBottom(x);\n\n\n      let gy = svg.append(\"g\")\n          .attr(\"class\", \"yAxis\")\n          .call(yAxis);\n\n          d3.select(\".yAxis\").select(\"path\").remove();\n\n          d3.select(\".yAxis\")\n            .style(\"font-size\", \"12px\")\n            .style(\"color\", \"#222\")\n            .attr(\"transform\", \"translate(-4,-4)\");\n\n\n\n      // let gx = svg.append(\"g\")\n      //     .attr(\"class\", \"xAxis\")\n      //     .call(xAxis);\n\n          // d3.select(\".xAxis\")\n          // .attr(\"transform\", \"translate(0,480)\");\n\n      let bars = svg.selectAll(\".bar\")\n          .data(data)\n          .enter()\n          .append(\"g\")\n\n      //append rects\n      bars.append(\"rect\")\n          .attr(\"class\", \"bar\")\n          .attr(\"y\", function (d) {\n              return y(d.Reasons);\n          })\n          .attr(\"height\", (y.bandwidth() - 6))\n          .attr(\"x\", 0)\n          .style(\"fill\", \"#5f89ad\")\n          .attr(\"width\", function (d) {\n              return x(d.Number);\n          });\n\n      //add a value label to the right of each bar\n      bars.append(\"text\")\n          .attr(\"class\", \"label\")\n            //y position of the label is halfway down the bar\n            .attr(\"y\", function (d) {\n              return (y(d.Reasons) + 12);\n            })\n            //x position is 3 pixels to the right of the bar\n            .attr(\"x\", function (d) {\n                return (x(d.Number) + 4);\n            })\n            .text(function (d) {\n                return d.Number;\n            });\n\n\n        svg.selectAll(\".label\")\n        .style(\"fill\",\"#5f89ad\");\n          // .attr(\"x\", \"-10px\")\n          // .attr(\"dy\", \"2px\");\n        // .attr(\"y\", function(d) { return y(d.Reasons) + 1; }).attr('dy', '-0.4em')\n        // //y position of the label is halfway down the bar\n        // .attr(\"y\", function (d) {\n        //     return y(d.Reasons) + y.bandwidth() / 2 + 4;\n        // })\n        // //x position is 3 pixels to the right of the bar\n        // .attr(\"x\", function (d) {\n        //     return x(d.Number) + 3;\n        // });\n\n    // vizmaps('mp4', 'Gray', 'initialize');\n    // loading[6] = 'mp4';\n\n});\n\n;/*\n * SidebarJS\n * Version 8.0.0\n * https://github.com/SidebarJS/sidebarjs#readme\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.SidebarJS = {}));\n}(this, (function (exports) { 'use strict';\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n\n      if (enumerableOnly) {\n        symbols = symbols.filter(function (sym) {\n          return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        });\n      }\n\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  var SIDEBARJS = 'sidebarjs';\n  var SIDEBARJS_FALLBACK_NAME = '';\n  var SIDEBARJS_CONTENT = 'sidebarjs-content';\n  var SIDEBARJS_TRANSITION_START = 'sidebarjs--transition-start';\n  var SIDEBARJS_TRANSITION_END = 'sidebarjs--transition-end';\n  var IS_VISIBLE = \"\".concat(SIDEBARJS, \"--is-visible\");\n  var IS_MOVING = \"\".concat(SIDEBARJS, \"--is-moving\");\n  var POSITIONS = [\"left\"\n  /* Left */\n  , \"right\"\n  /* Right */\n  ];\n  var EVENT_LISTENER_OPTIONS = {\n    passive: true\n  };\n  var TOUCH_START = 'touchstart';\n  var TOUCH_MOVE = 'touchmove';\n  var TOUCH_END = 'touchend';\n  var ELEMENT_ACTIONS = ['toggle', 'open', 'close'];\n  var DEFAULT_CONFIG = {\n    documentMinSwipeX: 10,\n    documentSwipeRange: 40,\n    responsive: false,\n    position: \"left\"\n    /* Left */\n    ,\n    backdropOpacity: 0.3\n  };\n  function isStyleMapSupported() {\n    return Boolean(window.CSS && window.CSS.number);\n  }\n  function create(element) {\n    var el = document.createElement('div');\n    el.setAttribute(element, '');\n    return el;\n  }\n  function elemHasListener(elem, value) {\n    return elem && typeof value === 'boolean' ? elem.sidebarjsListener = value : !!elem.sidebarjsListener;\n  }\n  function shouldDefineMainContent(mainContent) {\n    if (mainContent) {\n      mainContent.setAttribute(SIDEBARJS_CONTENT, '');\n      return mainContent;\n    } else {\n      return document.querySelector(\"[\".concat(SIDEBARJS_CONTENT, \"]\"));\n    }\n  }\n  function forEachActionElement(sidebarName, func) {\n    for (var i = 0; i < ELEMENT_ACTIONS.length; i++) {\n      var action = ELEMENT_ACTIONS[i];\n      var elements = document.querySelectorAll(\"[\".concat(SIDEBARJS, \"-\").concat(action, \"=\\\"\").concat(sidebarName, \"\\\"]\"));\n\n      for (var j = 0; j < elements.length; j++) {\n        func(elements[j], action);\n      }\n    }\n  }\n  function targetElementIsBackdrop(e) {\n    return e.target.hasAttribute(\"\".concat(SIDEBARJS, \"-backdrop\"));\n  }\n  function shouldInvokeFunction(fn) {\n    if (fn) {\n      fn();\n    }\n  }\n\n  var SidebarElement = /*#__PURE__*/function () {\n    function SidebarElement() {\n      var _this = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      _classCallCheck(this, SidebarElement);\n\n      this.toggle = function () {\n        _this.isVisible() ? _this.close() : _this.open();\n      };\n\n      this.open = function () {\n        _this.addComponentClass(IS_VISIBLE);\n\n        _this.setBackdropOpacity(_this.backdropOpacity);\n      };\n\n      this.close = function () {\n        _this.removeComponentClass(IS_VISIBLE);\n\n        _this.clearStyle(_this.backdrop);\n      };\n\n      this._onTouchStart = function (e) {\n        _this.initialTouch = e.touches[0].pageX;\n      };\n\n      this._onTouchMove = function (e) {\n        var swipeDirection = -(_this.initialTouch - e.touches[0].clientX);\n        var sidebarMovement = _this.container.clientWidth + (_this.hasLeftPosition() ? swipeDirection : -swipeDirection);\n\n        if (sidebarMovement <= _this.container.clientWidth) {\n          _this.touchMoveSidebar = Math.abs(swipeDirection);\n\n          _this.moveSidebar(swipeDirection);\n        }\n      };\n\n      this._onTouchEnd = function () {\n        _this.removeComponentClass(IS_MOVING);\n\n        _this.clearStyle(_this.container);\n\n        _this.clearStyle(_this.backdrop);\n\n        _this.touchMoveSidebar > _this.container.clientWidth / 3.5 ? _this.close() : _this.open();\n        _this.initialTouch = null;\n        _this.touchMoveSidebar = null;\n      };\n\n      this._onSwipeOpenStart = function (e) {\n        if (targetElementIsBackdrop(e)) {\n          return;\n        }\n\n        var touchPositionX = e.touches[0].clientX;\n        var documentTouch = _this.hasLeftPosition() ? touchPositionX : document.body.clientWidth - touchPositionX;\n\n        if (documentTouch < _this.documentSwipeRange) {\n          _this._onTouchStart(e);\n        }\n      };\n\n      this._onSwipeOpenMove = function (e) {\n        if (!targetElementIsBackdrop(e) && _this.initialTouch && !_this.isVisible()) {\n          var documentSwiped = e.touches[0].clientX - _this.initialTouch;\n\n          var hasLeftPosition = _this.hasLeftPosition();\n\n          var swipeX = hasLeftPosition ? documentSwiped : -documentSwiped;\n          var sidebarMovement = _this.container.clientWidth - swipeX;\n\n          if (sidebarMovement > 0 && swipeX >= _this.documentMinSwipeX) {\n            _this.openMovement = hasLeftPosition ? -sidebarMovement : sidebarMovement;\n\n            _this.moveSidebar(_this.openMovement);\n          }\n        }\n      };\n\n      this._onSwipeOpenEnd = function () {\n        if (_this.openMovement) {\n          _this.openMovement = null;\n\n          _this._onTouchEnd();\n        }\n      };\n\n      this._onTransitionStart = function () {\n        var _this$getTransitionTy = _this.getTransitionType(),\n            open = _this$getTransitionTy.open,\n            close = _this$getTransitionTy.close;\n\n        if (open || close) {\n          _this.toggleTransitionClass(true);\n        }\n      };\n\n      this._onTransitionEnd = function () {\n        var _this$getTransitionTy2 = _this.getTransitionType(),\n            open = _this$getTransitionTy2.open,\n            close = _this$getTransitionTy2.close,\n            isVisible = _this$getTransitionTy2.isVisible;\n\n        if (open || close) {\n          _this.toggleTransitionClass(false);\n        }\n\n        if (open) {\n          _this._wasVisible = true;\n          shouldInvokeFunction(_this._emitOnOpen);\n        } else if (close) {\n          _this._wasVisible = false;\n          shouldInvokeFunction(_this._emitOnClose);\n        }\n\n        if (_this._emitOnChangeVisibility) {\n          _this._emitOnChangeVisibility({\n            isVisible: isVisible\n          });\n        }\n      };\n\n      this.nativeGestures = new Map([[TOUCH_START, this._onTouchStart], [TOUCH_MOVE, this._onTouchMove], [TOUCH_END, this._onTouchEnd]]);\n      this.nativeOpenGestures = new Map([[TOUCH_START, this._onSwipeOpenStart], [TOUCH_MOVE, this._onSwipeOpenMove], [TOUCH_END, this._onSwipeOpenEnd]]);\n\n      var config = _objectSpread2(_objectSpread2({}, DEFAULT_CONFIG), options);\n\n      var hasCustomTransclude = config.container && config.backdrop;\n      this.component = config.component || document.querySelector(\"[\".concat(SIDEBARJS, \"]\"));\n      this.container = hasCustomTransclude ? config.container : create(\"\".concat(SIDEBARJS, \"-container\"));\n      this.backdrop = hasCustomTransclude ? config.backdrop : create(\"\".concat(SIDEBARJS, \"-backdrop\"));\n      this.documentMinSwipeX = config.documentMinSwipeX;\n      this.documentSwipeRange = config.documentSwipeRange;\n      this.nativeSwipe = config.nativeSwipe !== false;\n      this.nativeSwipeOpen = config.nativeSwipeOpen !== false;\n      this.isStyleMapSupported = isStyleMapSupported();\n      this.responsive = Boolean(config.responsive);\n      this.mainContent = shouldDefineMainContent(config.mainContent);\n      this.backdropOpacity = config.backdropOpacity;\n      this.backdropOpacityRatio = 1 / config.backdropOpacity;\n      this._emitOnOpen = config.onOpen;\n      this._emitOnClose = config.onClose;\n      this._emitOnChangeVisibility = config.onChangeVisibility;\n\n      if (!hasCustomTransclude) {\n        try {\n          this.transcludeContent();\n        } catch (e) {\n          throw new Error('You must define an element with [sidebarjs] attribute');\n        }\n      }\n\n      this.setSwipeGestures(true);\n\n      if (this.responsive || this.mainContent) {\n        this.setResponsive();\n      }\n\n      this.setPosition(config.position);\n      this.addAttrsEventsListeners(this.component.getAttribute(SIDEBARJS));\n      this.addTransitionListener();\n      this.backdrop.addEventListener('click', this.close, EVENT_LISTENER_OPTIONS);\n    }\n\n    _createClass(SidebarElement, [{\n      key: \"isVisible\",\n      value: function isVisible() {\n        return this.component.classList.contains(IS_VISIBLE);\n      }\n    }, {\n      key: \"destroy\",\n      value: function destroy() {\n        var _this2 = this;\n\n        this.removeNativeGestures();\n        this.container.removeEventListener('transitionstart', this._onTransitionStart);\n        this.container.removeEventListener('transitionend', this._onTransitionEnd);\n        this.backdrop.removeEventListener('click', this.close);\n        this.removeNativeOpenGestures();\n        this.removeAttrsEventsListeners(this.component.getAttribute(SIDEBARJS));\n        this.removeComponentClassPosition();\n\n        while (this.container.firstElementChild) {\n          this.component.appendChild(this.container.firstElementChild);\n        }\n\n        this.component.removeChild(this.container);\n        this.component.removeChild(this.backdrop);\n        Object.keys(this).forEach(function (key) {\n          return _this2[key] = null;\n        });\n      }\n    }, {\n      key: \"setPosition\",\n      value: function setPosition(position) {\n        var _this3 = this;\n\n        this.addComponentClass(IS_MOVING);\n        this.position = POSITIONS.indexOf(position) >= 0 ? position : \"left\"\n        /* Left */\n        ;\n        var resetMainContent = (document.querySelectorAll(\"[\".concat(SIDEBARJS, \"]\")) || []).length === 1;\n        this.removeComponentClassPosition(resetMainContent);\n        this.addComponentClass(\"\".concat(SIDEBARJS, \"--\").concat(this.position));\n\n        if (this.responsive && this.mainContent) {\n          this.mainContent.classList.add(\"\".concat(SIDEBARJS_CONTENT, \"--\").concat(this.position));\n        }\n\n        setTimeout(function () {\n          return _this3.component && _this3.removeComponentClass(IS_MOVING);\n        }, 200);\n      }\n    }, {\n      key: \"addAttrsEventsListeners\",\n      value: function addAttrsEventsListeners(sidebarName) {\n        var _this4 = this;\n\n        forEachActionElement(sidebarName, function (element, action) {\n          if (!elemHasListener(element)) {\n            element.addEventListener('click', _this4[action], EVENT_LISTENER_OPTIONS);\n            elemHasListener(element, true);\n          }\n        });\n      }\n    }, {\n      key: \"removeAttrsEventsListeners\",\n      value: function removeAttrsEventsListeners(sidebarName) {\n        var _this5 = this;\n\n        forEachActionElement(sidebarName, function (element, action) {\n          if (elemHasListener(element)) {\n            element.removeEventListener('click', _this5[action]);\n            elemHasListener(element, false);\n          }\n        });\n      }\n    }, {\n      key: \"setSwipeGestures\",\n      value: function setSwipeGestures(value) {\n        if (typeof value !== 'boolean') {\n          throw new Error(\"You provided a \".concat(_typeof(value), \" value but setSwipeGestures needs a boolean value.\"));\n        }\n\n        if (this.nativeSwipe) {\n          value ? this.addNativeGestures() : this.removeNativeGestures();\n\n          if (this.nativeSwipeOpen) {\n            value ? this.addNativeOpenGestures() : this.removeNativeOpenGestures();\n          }\n        }\n      }\n    }, {\n      key: \"getTransitionType\",\n      value: function getTransitionType() {\n        var isVisible = this.isVisible();\n        var open = isVisible && !this._wasVisible;\n        var close = !isVisible && this._wasVisible;\n        return {\n          open: open,\n          close: close,\n          isVisible: isVisible\n        };\n      }\n    }, {\n      key: \"toggleTransitionClass\",\n      value: function toggleTransitionClass(isStart) {\n        this.toggleComponentClass(SIDEBARJS_TRANSITION_END, !isStart);\n        this.toggleComponentClass(SIDEBARJS_TRANSITION_START, isStart);\n      }\n    }, {\n      key: \"addTransitionListener\",\n      value: function addTransitionListener() {\n        this._wasVisible = this.isVisible();\n        this.container.addEventListener('transitionstart', this._onTransitionStart, EVENT_LISTENER_OPTIONS);\n        this.container.addEventListener('transitionend', this._onTransitionEnd, EVENT_LISTENER_OPTIONS);\n      }\n    }, {\n      key: \"removeComponentClassPosition\",\n      value: function removeComponentClassPosition(resetMainContent) {\n        for (var i = 0; i < POSITIONS.length; i++) {\n          this.removeComponentClass(\"\".concat(SIDEBARJS, \"--\").concat(POSITIONS[i]));\n\n          if (resetMainContent && this.mainContent) {\n            this.mainContent.classList.remove(\"\".concat(SIDEBARJS_CONTENT, \"--\").concat(POSITIONS[i]));\n          }\n        }\n      }\n    }, {\n      key: \"hasLeftPosition\",\n      value: function hasLeftPosition() {\n        return this.position === \"left\"\n        /* Left */\n        ;\n      }\n    }, {\n      key: \"hasRightPosition\",\n      value: function hasRightPosition() {\n        return this.position === \"right\"\n        /* Right */\n        ;\n      }\n    }, {\n      key: \"transcludeContent\",\n      value: function transcludeContent() {\n        while (this.component.firstChild) {\n          this.container.appendChild(this.component.firstChild);\n        }\n\n        while (this.component.firstChild) {\n          this.component.removeChild(this.component.firstChild);\n        }\n\n        this.component.appendChild(this.container);\n        this.component.appendChild(this.backdrop);\n      }\n    }, {\n      key: \"addNativeGestures\",\n      value: function addNativeGestures() {\n        var _this6 = this;\n\n        this.nativeGestures.forEach(function (action, event) {\n          _this6.component.addEventListener(event, action, EVENT_LISTENER_OPTIONS);\n        });\n      }\n    }, {\n      key: \"removeNativeGestures\",\n      value: function removeNativeGestures() {\n        var _this7 = this;\n\n        this.nativeGestures.forEach(function (action, event) {\n          _this7.component.removeEventListener(event, action);\n        });\n      }\n    }, {\n      key: \"addNativeOpenGestures\",\n      value: function addNativeOpenGestures() {\n        this.nativeOpenGestures.forEach(function (action, event) {\n          document.addEventListener(event, action, EVENT_LISTENER_OPTIONS);\n        });\n      }\n    }, {\n      key: \"removeNativeOpenGestures\",\n      value: function removeNativeOpenGestures() {\n        this.nativeOpenGestures.forEach(function (action, event) {\n          document.removeEventListener(event, action);\n        });\n      }\n    }, {\n      key: \"moveSidebar\",\n      value: function moveSidebar(movement) {\n        this.addComponentClass(IS_MOVING);\n        this.applyStyle(this.container, 'transform', \"translate(\".concat(movement, \"px, 0)\"), true);\n        this.updateBackdropOpacity(movement);\n      }\n    }, {\n      key: \"updateBackdropOpacity\",\n      value: function updateBackdropOpacity(movement) {\n        var swipeProgress = 1 - Math.abs(movement) / this.container.clientWidth;\n        var opacity = swipeProgress / this.backdropOpacityRatio;\n        this.setBackdropOpacity(opacity);\n      }\n    }, {\n      key: \"setBackdropOpacity\",\n      value: function setBackdropOpacity(opacity) {\n        this.applyStyle(this.backdrop, 'opacity', opacity.toString());\n      }\n    }, {\n      key: \"setResponsive\",\n      value: function setResponsive() {\n        if (!this.responsive && this.mainContent) {\n          throw new Error(\"You provide a [\".concat(SIDEBARJS_CONTENT, \"] element without set {responsive: true}\"));\n        }\n\n        if (this.responsive && !this.mainContent) {\n          throw new Error(\"You have set {responsive: true} without provide a [\".concat(SIDEBARJS_CONTENT, \"] element\"));\n        }\n\n        this.addComponentClass('sidebarjs--responsive');\n      }\n    }, {\n      key: \"applyStyle\",\n      value: function applyStyle(el, prop, val, vendorify) {\n        if (this.isStyleMapSupported) {\n          el.attributeStyleMap.set(prop, val);\n        } else {\n          el.style[prop] = val;\n\n          if (vendorify) {\n            var vendor = 'webkit' + prop.charAt(0).toUpperCase() + prop.slice(1);\n            el.style[vendor] = val;\n          }\n        }\n      }\n    }, {\n      key: \"clearStyle\",\n      value: function clearStyle(el) {\n        if (this.isStyleMapSupported) {\n          el.attributeStyleMap.clear();\n        } else {\n          el.removeAttribute('style');\n        }\n      }\n    }, {\n      key: \"addComponentClass\",\n      value: function addComponentClass(className) {\n        this.component.classList.add(className);\n      }\n    }, {\n      key: \"removeComponentClass\",\n      value: function removeComponentClass(className) {\n        this.component.classList.remove(className);\n      }\n    }, {\n      key: \"toggleComponentClass\",\n      value: function toggleComponentClass(className, force) {\n        this.component.classList.toggle(className, force);\n      }\n    }]);\n\n    return SidebarElement;\n  }();\n\n  var SidebarService = /*#__PURE__*/function () {\n    function SidebarService() {\n      _classCallCheck(this, SidebarService);\n\n      this.instances = {};\n    }\n\n    _createClass(SidebarService, [{\n      key: \"fallbackName\",\n      value: function fallbackName(sidebarName) {\n        return sidebarName || SIDEBARJS_FALLBACK_NAME;\n      }\n    }, {\n      key: \"getInstance\",\n      value: function getInstance(sidebarName) {\n        return this.instances[this.fallbackName(sidebarName)];\n      }\n    }, {\n      key: \"create\",\n      value: function create(options) {\n        var _options$component;\n\n        var name = this.fallbackName(options === null || options === void 0 ? void 0 : (_options$component = options.component) === null || _options$component === void 0 ? void 0 : _options$component.getAttribute(SIDEBARJS));\n        this.instances[name] = new SidebarElement(options);\n        return this.instances[name];\n      }\n    }, {\n      key: \"open\",\n      value: function open(sidebarName) {\n        var _this$getInstance;\n\n        (_this$getInstance = this.getInstance(sidebarName)) === null || _this$getInstance === void 0 ? void 0 : _this$getInstance.open();\n      }\n    }, {\n      key: \"close\",\n      value: function close(sidebarName) {\n        var _this$getInstance2;\n\n        (_this$getInstance2 = this.getInstance(sidebarName)) === null || _this$getInstance2 === void 0 ? void 0 : _this$getInstance2.close();\n      }\n    }, {\n      key: \"toggle\",\n      value: function toggle(sidebarName) {\n        var _this$getInstance3;\n\n        (_this$getInstance3 = this.getInstance(sidebarName)) === null || _this$getInstance3 === void 0 ? void 0 : _this$getInstance3.toggle();\n      }\n    }, {\n      key: \"isVisible\",\n      value: function isVisible(sidebarName) {\n        var _this$getInstance4;\n\n        return !!((_this$getInstance4 = this.getInstance(sidebarName)) !== null && _this$getInstance4 !== void 0 && _this$getInstance4.isVisible());\n      }\n    }, {\n      key: \"setPosition\",\n      value: function setPosition(position, sidebarName) {\n        var _this$getInstance5;\n\n        (_this$getInstance5 = this.getInstance(sidebarName)) === null || _this$getInstance5 === void 0 ? void 0 : _this$getInstance5.setPosition(position);\n      }\n    }, {\n      key: \"elemHasListener\",\n      value: function elemHasListener$1(elem, value) {\n        return elemHasListener(elem, value);\n      }\n    }, {\n      key: \"destroy\",\n      value: function destroy(sidebarName) {\n        var name = this.fallbackName(sidebarName);\n\n        if (this.instances[name]) {\n          this.instances[name].destroy();\n          this.instances[name] = null;\n          delete this.instances[name];\n        }\n      }\n    }]);\n\n    return SidebarService;\n  }();\n\n  exports.SidebarElement = SidebarElement;\n  exports.SidebarService = SidebarService;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n;","inputSourceMap":null}